diff --git a/../../../upstreams/iotop/.gitignore b/../../../upstreams/iotop/.gitignore
new file mode 100644
index 0000000..d1d525f
--- /dev/null
+++ b/../../../upstreams/iotop/.gitignore
@@ -0,0 +1,3 @@
+bld/*
+*.swp
+iotop
diff --git a/./LICENSE b/../../../upstreams/iotop/LICENSE
index 9b80835..39c20f8 100644
--- a/./LICENSE
+++ b/../../../upstreams/iotop/LICENSE
@@ -1,6 +1,6 @@
 iotop - interactive monitor of Linux IO activity
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
diff --git a/./Makefile b/../../../upstreams/iotop/Makefile
index 7702931..594f223 100644
--- a/./Makefile
+++ b/../../../upstreams/iotop/Makefile
@@ -7,7 +7,7 @@
 # SPDX-License-Identifier: GPL-2.0-or-later
 #
 # Copyright (C) 2014  Vyacheslav Trushkin
-# Copyright (C) 2020-2023  Boian Bonev
+# Copyright (C) 2020-2024  Boian Bonev
 #
 # This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 #
diff --git a/./README.md b/../../../upstreams/iotop/README.md
index a1b7ea4..8211582 100644
--- a/./README.md
+++ b/../../../upstreams/iotop/README.md
@@ -72,6 +72,15 @@ Use the following command:
     sudo xbps-install iotop-c
 </details>
 
+<details>
+  <summary>Arch Linux</summary>
+&nbsp;  
+
+Use the following command:
+    
+    sudo pacman -S iotop-c
+</details>
+
 ## How to build from source
 Please note that the installation and the usage of this program require root access.
 
@@ -197,6 +206,8 @@ cd iotop && git checkout master && git pull && make clean && make -j
         --show-exited      show exited processes
     -l, --no-color         do not colorize values
         --color            colorize values
+    -T, --hide-time        hide current time
+        --show-time        show current time
         --si               use SI units of 1000 when printing values
         --no-si            use non-SI units of 1024 when printing values
         --threshold=1..10  threshold to switch to next unit
@@ -224,6 +235,7 @@ The iotop community gathers in #iotop on libera.chat:
 
 Notable contributions (ordered by time of last contribution):
 
+-   Christian Heusel &lt;[christian@heusel.eu](mailto:christian@heusel.eu)&gt; - Arch Linux packaging and testing
 -   Leah Neukirchen &lt;[leah@vuxu.org](mailto:leah@vuxu.org)&gt; - Void Linux packaging and testing
 -   Vitaly Chikunov &lt;[vt@altlinux.org](mailto:vt@altlinux.org)&gt; - ALT Linux packaging and testing
 -   Matteo Bernardini &lt;[ponce@slackbuilds.org](mailto:ponce@slackbuilds.org)&gt; - SlackBuilds packaging and testing
diff --git a/./TODO b/./TODO
deleted file mode 100644
index 4c57781..0000000
--- a/./TODO
+++ /dev/null
@@ -1,29 +0,0 @@
-
---- history of finished TODO items ---
-
-- Show prio of processes with threads as !be/4
-- Third mode proc+threads, to show threads under the process [change the threads mode instead of adding 3rd mode]
-- Add some gap between pseudo-graph and command line; use the gap to visually group threads of the same process
-- Aggregate thread data in process mode
-- Edit pid/user filters from interactive mode
-- Let 0 show all columns
-- Scrolling for the main view by UP/DOWN/PGUP/PGDN
-- Document exited threads/process display
-- Document the display of processes with different prio (e.g. !be/4)
-- Document the sorting order in thread view (threads always go after their main process)
-- Document pid/user filters interactive interface
-- Document 0 shows all columns
-- Document -u +123 command line
-- Document scrolling
-- Add scroll bar
-- Rework help to be like popup window
-- Add all missing keys to help window
-- Freezed, scrollable view of procs/threads for ionice selection (abandoned idea - exited processes should be kept track of)
-- ESC key close the help dialog
-- let the warning window about missing task_delayacct be closed by any key press and reappear on state change
-- add a small red indicator for missing kernel support for swapin/io
-- mask swapin/io columns and io graph data source if kernel support is disabled
-- do not sort on masked columns but continue to sort on hidden ones
-- add read/write/read+write data sources for the graph
-- add a toggle to select graph data source (as a side effect option 'only' will use the same)
-- restore some form of visible help on the bottom
diff --git a/./archlinux/PKGBUILD b/./archlinux/PKGBUILD
deleted file mode 100644
index 8512135..0000000
--- a/./archlinux/PKGBUILD
+++ /dev/null
@@ -1,34 +0,0 @@
-# Contributor: Rumen Jekov <rvjekov@gmail.com>
-# Maintainer: Rumen Jekov <rvjekov@gmail.com>
-# Maintainer: Boian Bonev <bbonev@ipacct.com>
-
-pkgname=iotop-c
-pkgver=1.25
-pkgrel=1
-pkgdesc="simple top-like I/O monitor (implemented in C)"
-arch=('i686' 'x86_64' 'aarch64' 'armv7h' 'ppc64le')
-url="https://github.com/Tomas-M/iotop"
-license=('GPL2')
-depends=('ncurses')
-makedepends=('pkgconf')
-conflicts=('iotop' 'iotop-git')
-provides=('iotop')
-source=("${url}/releases/download/v${pkgver}/iotop-${pkgver}.tar.xz" "${url}/releases/download/v${pkgver}/iotop-${pkgver}.tar.xz.asc")
-validpgpkeys=('BA60BC20F37E59444D6D25001365720913D2F22D')
-md5sums=('SKIP' 'SKIP')
-
-prepare() {
-	cd iotop-${pkgver}
-	sed -i 's/sbin/bin/g' Makefile
-}
-
-build() {
-	cd iotop-${pkgver}
-	make DESTDIR="${pkgdir}" V=1
-}
-
-package() {
-	cd iotop-${pkgver}
-	unset PREFIX
-	make DESTDIR="${pkgdir}" install
-}
diff --git a/./fedora/iotop-c.spec b/../../../upstreams/iotop/fedora/iotop-c.spec
index c08bec3..2d38c09 100644
--- a/./fedora/iotop-c.spec
+++ b/../../../upstreams/iotop/fedora/iotop-c.spec
@@ -1,5 +1,5 @@
 Name:           iotop-c
-Version:        1.25
+Version:        1.26
 Release:        1%{?dist}
 Summary:        Simple top-like I/O monitor (implemented in C)
 
@@ -9,6 +9,9 @@ Source0:        https://github.com/Tomas-M/iotop/releases/download/v%{version}/i
 Source1:        https://github.com/Tomas-M/iotop/releases/download/v%{version}/iotop-%{version}.tar.xz.asc
 Source2:        https://raw.githubusercontent.com/Tomas-M/iotop/v%{version}/debian/upstream/signing-key.asc
 
+Provides:       iotop
+Obsoletes:      iotop < 0.7
+
 BuildRequires:  gcc
 BuildRequires:  gnupg2
 BuildRequires:  ncurses-devel
@@ -42,16 +45,27 @@ NO_FLTO=1 %make_build
 
 %install
 V=1 STRIP=: %make_install
-mv %{buildroot}%{_sbindir}/iotop %{buildroot}%{_sbindir}/iotop-c
-mv %{buildroot}%{_mandir}/man8/iotop.8 %{buildroot}%{_mandir}/man8/iotop-c.8
 
 %files
 %license COPYING
 %license LICENSE
-%{_sbindir}/iotop-c
-%{_mandir}/man8/iotop-c.8*
+%{_sbindir}/iotop
+%{_mandir}/man8/iotop.8*
 
 %changelog
+* Sat 03 Feb 2024 Boian Bonev <bbonev@ipacct.com> - 1.26-1
+- Update to latest ver 1.26
+
+* Thu Feb 01 2024 Michal Hlavinka <mhlavink@redhat.com> - 1.25-4
+- replace iotop https://fedoraproject.org/wiki/Changes/Replace_iotop_with_iotop-c
+- iotop-c executable renamed back to iotop
+
+* Wed Jan 24 2024 Fedora Release Engineering <releng@fedoraproject.org> - 1.25-3
+- Rebuilt for https://fedoraproject.org/wiki/Fedora_40_Mass_Rebuild
+
+* Sat Jan 20 2024 Fedora Release Engineering <releng@fedoraproject.org> - 1.25-2
+- Rebuilt for https://fedoraproject.org/wiki/Fedora_40_Mass_Rebuild
+
 * Sat Oct 14 2023 Boian Bonev <bbonev@ipacct.com> - 1.25-1
 - Update to latest ver 1.25
 
diff --git a/./glibcvertest.h b/../../../upstreams/iotop/glibcvertest.h
index 1aa2e0b..1543de6 100644
--- a/./glibcvertest.h
+++ b/../../../upstreams/iotop/glibcvertest.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./iotop.8 b/../../../upstreams/iotop/iotop.8
index efb7cb1..8c7e53b 100644
--- a/./iotop.8
+++ b/../../../upstreams/iotop/iotop.8
@@ -1,4 +1,4 @@
-.TH IOTOP "8" "January 22, 2023"
+.TH IOTOP "8" "January 22, 2024"
 .SH NAME
 iotop \- simple top\-like I/O monitor
 .SH SYNOPSIS
@@ -284,6 +284,12 @@ Do not colorize values
 Colorize values. This will override the effect of the environment variable
 \fBNO_COLOR\fR when explicitly specified on the command line.
 .TP
+\fB\-T\fR, \fB\-\-hide\-time\fR
+Do not show time clock in upper right corner
+.TP
+\fB\-\-show\-time\fR
+Show time clock in upper right corner
+.TP
 \fB\-\-si\fR
 Use SI units of \fB1000\fR when printing values. The default is non\-SI
 \fB1024\fR
@@ -398,6 +404,9 @@ background
 \fBe\fR, \fBE\fR
 Toggle the display of exited processes
 .TP
+\fBT\fR
+Toggle the display of time clock in upper right corner
+.TP
 \fBs\fR, \fBS\fR
 Toggle freeze of data collection
 .TP
@@ -484,7 +493,7 @@ empty string, all color output is suppressed.
 The original Python iotop implementation was written by Guillaume Chazarain.
 This rewrite in C was started in 2014 by Vyacheslav Trushkin and reworked to
 include all missing features from the original Python code and several new ones
-from 2020 to 2023 by Boian Bonev.
+from 2020 to 2024 by Boian Bonev.
 .PP
 This manual page was started by Paul Wise for the Debian project and is placed
 in the public domain.
diff --git a/./src/arr.c b/../../../upstreams/iotop/src/arr.c
index 51fd62e..9cfb2f4 100644
--- a/./src/arr.c
+++ b/../../../upstreams/iotop/src/arr.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/checks.c b/../../../upstreams/iotop/src/checks.c
index 494936e..4e81abb 100644
--- a/./src/checks.c
+++ b/../../../upstreams/iotop/src/checks.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/configfile.c b/../../../upstreams/iotop/src/configfile.c
index e91f1ea..1b5ed82 100644
--- a/./src/configfile.c
+++ b/../../../upstreams/iotop/src/configfile.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
@@ -20,7 +20,8 @@ You should have received a copy of the GNU General Public License along with thi
 #include <sys/stat.h>
 #include <sys/types.h>
 
-#define CONFIG_PATH "/.config/iotop"
+#define CONFIG_DIR1 "/.config"
+#define CONFIG_DIR2 "/iotop"
 #define CONFIG_NAME "/iotoprc"
 #define MAX_OPT 50
 
@@ -48,15 +49,25 @@ static inline void mkdir_p(const char *dir) {
 
 static inline FILE *config_file_open(const char *mode) {
 	char path[PATH_MAX];
+	char *xdgconfig;
 	char *home;
 
+	xdgconfig=getenv("XDG_CONFIG_HOME");
 	home=getenv("HOME");
-	if (!home)
-		home="";
 
-	strcpy(path,home);
-	strcat(path,CONFIG_PATH);
-	mkdir_p(path);
+	if (xdgconfig) {
+		strcpy(path,xdgconfig);
+		strcat(path,CONFIG_DIR2);
+		mkdir_p(path);
+	} else {
+		if (home)
+			strcpy(path,home);
+		else
+			strcpy(path,"");
+		strcat(path,CONFIG_DIR1);
+		strcat(path,CONFIG_DIR2);
+		mkdir_p(path);
+	}
 	strcat(path,CONFIG_NAME);
 
 	return fopen(path,mode);
@@ -247,6 +258,9 @@ inline int config_file_save(void) {
 	// --ascii
 	if (!config.f.unicode)
 		fprintf(cf,"--ascii\n");
+	// --hide-time
+	if (config.f.hideclock)
+		fprintf(cf,"--hide-time\n");
 
 	fclose(cf);
 
diff --git a/./src/delayacct.c b/../../../upstreams/iotop/src/delayacct.c
index 99516e6..a7b0110 100644
--- a/./src/delayacct.c
+++ b/../../../upstreams/iotop/src/delayacct.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/ioprio.c b/../../../upstreams/iotop/src/ioprio.c
index 98409c0..83f5e72 100644
--- a/./src/ioprio.c
+++ b/../../../upstreams/iotop/src/ioprio.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/iotop.h b/../../../upstreams/iotop/src/iotop.h
index 0048a59..74cde0b 100644
--- a/./src/iotop.h
+++ b/../../../upstreams/iotop/src/iotop.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
@@ -27,7 +27,7 @@ You should have received a copy of the GNU General Public License along with thi
 #include <sys/types.h>
 #include <stdint.h>
 
-#define VERSION "1.25"
+#define VERSION "1.26"
 
 typedef enum {
 	E_GR_IO,
@@ -62,6 +62,7 @@ typedef union {
 		int hideexited;
 		int nocolor;
 		int reverse_graph;
+		int hideclock;
 		int accumbw;
 		int unicode; // this and below are not part of opts
 		e_grtype grtype;
@@ -71,7 +72,7 @@ typedef union {
 		int base; // 1000 or 1024
 		int threshold; // 1..10
 	} f;
-	int opts[22];
+	int opts[23];
 } config_t;
 
 typedef struct {
diff --git a/./src/main.c b/../../../upstreams/iotop/src/main.c
index b3dc9bd..704955d 100644
--- a/./src/main.c
+++ b/../../../upstreams/iotop/src/main.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
@@ -47,6 +47,7 @@ You should have received a copy of the GNU General Public License along with thi
 #define OPT_UNICODE 0x115
 #define OPT_COLOR 0x116
 #define OPT_NO_ACCUM_BW 0x117
+#define OPT_SHOW_TIME 0x118
 
 static const char *progname=NULL;
 int maxpidlen=5;
@@ -65,7 +66,7 @@ inline void init_params(void) {
 	params.user_id=-1;
 }
 
-static const char str_opt[]="boPaktqc123456789xelRA";
+static const char str_opt[]="boPaktqc123456789xelRTA";
 
 static inline void print_help(void) {
 	printf(
@@ -128,6 +129,8 @@ static inline void print_help(void) {
 		"      --show-exited      show exited processes\n"
 		"  -l, --no-color         do not colorize values\n"
 		"      --color            colorize values\n"
+		"  -T, --hide-time        hide current time\n"
+		"      --show-time        show current time\n"
 		"      --si               use SI units of 1000 when printing values\n"
 		"      --no-si            use non-SI units of 1024 when printing values\n"
 		"      --threshold=1..10  threshold to switch to next unit\n"
@@ -211,6 +214,8 @@ static inline void parse_args(int clac,char **clav) {
 				{"show-graph",no_argument,NULL,OPT_SHOW_GRAPH},
 				{"hide-command",no_argument,NULL,'9'},
 				{"show-command",no_argument,NULL,OPT_SHOW_CMD},
+				{"hide-time",no_argument,NULL,'T'},
+				{"show-time",no_argument,NULL,OPT_SHOW_TIME},
 				{"dead-x",no_argument,NULL,'x'},
 				{"no-dead-x",no_argument,NULL,OPT_NO_DEADX},
 				{"hide-exited",no_argument,NULL,'e'},
@@ -229,7 +234,7 @@ static inline void parse_args(int clac,char **clav) {
 				{NULL,0,NULL,0}
 			};
 
-			int c=getopt_long(argc,argv,"vhbon:d:p:u:Paktqc123456789xelRg:H:WA",long_options,NULL);
+			int c=getopt_long(argc,argv,"boPaktqc123456789xelRTAn:d:p:u:g:H:vhW",long_options,NULL);
 
 			if (c==-1) {
 				if (optind<argc) {
@@ -284,6 +289,7 @@ static inline void parse_args(int clac,char **clav) {
 				case 'e':
 				case 'l':
 				case 'R':
+				case 'T':
 				case_opt:
 					config.opts[(unsigned int)(strchr(str_opt,c)-str_opt)]=1;
 					break;
@@ -408,6 +414,9 @@ static inline void parse_args(int clac,char **clav) {
 				case OPT_NO_ACCUM_BW:
 					config.f.accumbw=0;
 					break;
+				case OPT_SHOW_TIME:
+					config.f.hideclock=0;
+					break;
 				default:
 					exit(EXIT_FAILURE);
 			}
diff --git a/./src/ucell.c b/../../../upstreams/iotop/src/ucell.c
index 327b188..260cb7d 100644
--- a/./src/ucell.c
+++ b/../../../upstreams/iotop/src/ucell.c
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/ucell.h b/../../../upstreams/iotop/src/ucell.h
index f7b205d..1156bb0 100644
--- a/./src/ucell.h
+++ b/../../../upstreams/iotop/src/ucell.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/utils.c b/../../../upstreams/iotop/src/utils.c
index 3d47e9e..bdc6017 100644
--- a/./src/utils.c
+++ b/../../../upstreams/iotop/src/utils.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/view_batch.c b/../../../upstreams/iotop/src/view_batch.c
index 62dc3b8..9e03cc4 100644
--- a/./src/view_batch.c
+++ b/../../../upstreams/iotop/src/view_batch.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/view_curses.c b/../../../upstreams/iotop/src/view_curses.c
index c2334e4..6e81e89 100644
--- a/./src/view_curses.c
+++ b/../../../upstreams/iotop/src/view_curses.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
@@ -18,6 +18,7 @@ You should have received a copy of the GNU General Public License along with thi
 #define GCC_PRINTF
 
 #include <pwd.h>
+#include <time.h>
 #include <regex.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -169,6 +170,7 @@ static char tasci[200]="Toggle using Unicode/ASCII characters [Unicode]";
 static char tcolr[200]="Toggle colorizing values [off]";
 static char txxxi[200]="Toggle exited processes xxx/inverse [inverse]";
 static char texit[200]="Toggle showing exited processes [off]";
+static char tcloc[200]="Toggle showing time clock [on]";
 static char tfrez[200]="Toggle data freeze [off]";
 static char units[200]="Toggle SI units [1024]";
 static char unitt[200]="Cycle unit threshold [10]";
@@ -211,6 +213,7 @@ const s_helpitem thelp[]={
 	{.descr=tcolr,.t="Toggle colorizing values [%s]",.k2="l",.k3="L"},
 	{.descr=txxxi,.t="Toggle exited processes xxx/inverse [%s]",.k2="x",.k3="X"},
 	{.descr=texit,.t="Toggle showing exited processes [%s]",.k2="e",.k3="E"},
+	{.descr=tcloc,.t="Toggle showing time clock [%s]",.k2="T"},
 	{.descr=tfrez,.t="Toggle data freeze [%s]",.k2="s",.k3="S"},
 	{.descr=units,.t="Toggle SI units [%d]",.k1="<Ctrl-B>",.k2="b",.k3=""},
 	{.descr=unitt,.t="Cycle unit threshold [%d]",.k1="<Ctrl-R>",.k2="t",.k3=""},
@@ -513,9 +516,10 @@ static inline void view_help(void) {
 					sprintf(p->descr,p->t,!config.f.hidecmd?"on":"off");
 					break;
 				case 'g': {
-					char *grt="";
+					char *grt;
 
 					switch (config.f.grtype) {
+						default:
 						case E_GR_IO:
 							grt="IO";
 							break;
@@ -560,8 +564,11 @@ static inline void view_help(void) {
 				case 't':
 					sprintf(p->descr,p->t,config.f.threshold);
 					break;
+				case 'T':
+					sprintf(p->descr,p->t,config.f.hideclock?"off":"on");
+					break;
 				case 0: { // only task_delayacct has no key
-					char *tda="";
+					char *tda;
 
 					if (has_task_delayacct())
 						tda=read_task_delayacct()?"dynamic on":"dynamic off";
@@ -877,13 +884,15 @@ static inline void view_curses(struct xxxid_stats_arr *cs,struct xxxid_stats_arr
 	}
 	attroff(A_REVERSE);
 
-	if ((dontrefresh||!has_tda)&&(maxx-maxcmdline+(config.f.hidecmd?0:strlen(COLUMN_L(0))+1)<(size_t)maxx)) {
+	if ((dontrefresh||!has_tda||!config.f.hideclock)&&(maxx-maxcmdline+(config.f.hidecmd?0:strlen(COLUMN_L(0))+1)<(size_t)maxx)) {
 		size_t xpos=maxx;
 
 		if (!has_tda)
 			xpos-=strlen("[T]");
 		if (dontrefresh)
 			xpos-=strlen("[frozen]");
+		if (!config.f.hideclock)
+			xpos-=strlen("(00:00:00)");
 
 		// don't step on column descriptions
 		if (xpos<maxx-maxcmdline+(config.f.hidecmd?0:strlen(COLUMN_L(0))+1))
@@ -897,6 +906,18 @@ static inline void view_curses(struct xxxid_stats_arr *cs,struct xxxid_stats_arr
 		}
 		if (dontrefresh)
 			mvprintw(ionice_line+1,xpos+(has_tda?0:strlen("[T]")),"[frozen]");
+		if (!config.f.hideclock) {
+			time_t t=time(NULL);
+			struct tm *tm;
+			char ts[20];
+
+			tm=localtime(&t);
+			if (strftime(ts,sizeof ts,"(%H:%M:%S)",tm)==0)
+				strcpy(ts,"( error! )");
+			attron(A_REVERSE);
+			mvprintw(ionice_line+1,xpos+(has_tda?0:strlen("[T]"))+(dontrefresh?strlen("[frozen]"):0),"%s",ts);
+			attroff(A_REVERSE);
+		}
 	}
 	// easiest place to print debug info
 	//mvprintw(ionice_line+1,maxx-maxcmdline+strlen(COLUMN_L(0))+1," ... ",...);
@@ -2123,6 +2144,9 @@ static inline int curses_key(int ch) {
 		case 'X':
 			config.f.deadx=!config.f.deadx;
 			break;
+		case 'T':
+			config.f.hideclock=!config.f.hideclock;
+			break;
 		case KEY_ESCAPE: // ESC
 			nocbreak();
 			k2=getch();
@@ -2427,6 +2451,9 @@ inline void view_curses_loop(void) {
 			get_vm_counters(&act.read_bytes,&act.write_bytes);
 			act.ts_c=now;
 			refresh=1;
+		} else if (bef+1000*params.delay<now&&dontrefresh&&!config.f.hideclock) {
+			bef=now;
+			refresh=1;
 		}
 		if (refresh&&k==ERR)
 			k=KEY_REFRESH;
diff --git a/./src/views.c b/../../../upstreams/iotop/src/views.c
index 78bc076..1e51b89 100644
--- a/./src/views.c
+++ b/../../../upstreams/iotop/src/views.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/vmstat.c b/../../../upstreams/iotop/src/vmstat.c
index caba1e6..5bdadb1 100644
--- a/./src/vmstat.c
+++ b/../../../upstreams/iotop/src/vmstat.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
diff --git a/./src/xxxid_info.c b/../../../upstreams/iotop/src/xxxid_info.c
index 9fa85d4..945eb3b 100644
--- a/./src/xxxid_info.c
+++ b/../../../upstreams/iotop/src/xxxid_info.c
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-or-later
 
 Copyright (C) 2014  Vyacheslav Trushkin
-Copyright (C) 2020-2023  Boian Bonev
+Copyright (C) 2020-2024  Boian Bonev
 
 This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 
