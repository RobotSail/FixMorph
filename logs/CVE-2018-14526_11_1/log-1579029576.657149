[Start] Crochet started at 2020-01-15 03:19:36.657208
[INFO]: Initializing project for Transfer
[INFO]: loading configuration
[COMMAND]: cp -rf /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch
[COMMAND]: mkdir /crochet/output/CVE-2018-14526_11_1
[COMMAND]: mkdir /crochet/output/CVE-2018-14526_11_1/fuzz-input
[COMMAND]: mkdir /crochet/output/CVE-2018-14526_11_1/fuzz-output
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/hostap-2017/src
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/hostap-2018/src
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch
[INFO]: set environment
[COMMAND]: export PYTHONPATH=/home/rshariffdeen/workspace/z3/build/python
[TRACE]: phases.Building:build: dict_keys([])
[INFO]: Building Projects
[TRACE]: phases.Building:safe_exec: dict_keys(['args', 'title', 'function_def'])
[INFO]: building binaries
[INFO]: running <function build_normal at 0x7f7c9d437c80>
[INFO]: restoring projects
[INFO]: cleaning projects
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2017/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2018/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[INFO]: configuring projects
[INFO]: building projects
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2017/src/;bear make CFLAGS='-g -O0 -DNDEBUG ' CXXFLAGS='-g -O0 -DNDEBUG ' > /crochet/logs/CVE-2018-14526_11_1/log-make
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2018/src/;bear make CFLAGS='-g -O0 -DNDEBUG ' CXXFLAGS='-g -O0 -DNDEBUG ' > /crochet/logs/CVE-2018-14526_11_1/log-make
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src/;bear make CFLAGS='-g -O0 -DNDEBUG ' CXXFLAGS='-g -O0 -DNDEBUG ' > /crochet/logs/CVE-2018-14526_11_1/log-make
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch/;bear make CFLAGS='-g -O0 -DNDEBUG ' CXXFLAGS='-g -O0 -DNDEBUG ' > /crochet/logs/CVE-2018-14526_11_1/log-make

	Successful building binaries, after 2.3917014598846436 seconds.
[TRACE]: phases.Differencing:diff: dict_keys([])
[INFO]: Analysing Changes
[TRACE]: phases.Differencing:safe_exec: dict_keys(['args', 'title', 'function_def'])
[INFO]: analysing source diff
[INFO]: running <function analyse_source_diff at 0x7f7c9c81c7b8>
[TRACE]: phases.Differencing:analyse_source_diff: dict_keys([])
[TRACE]: tools.Differ:diff_files: dict_keys(['output_ext_b', 'project_path_a', 'project_path_b', 'output_h_diff', 'output_ext_a', 'output_diff_file', 'output_ext', 'output_c_diff'])
[TRACE]: common.Utilities:get_file_extension_list: dict_keys(['src_path', 'output_file_name'])
[COMMAND]: find /hostap/CVE-2018-14526_11_1/hostap-2017/src -type f -not -name '*\.c' -not -name '*\.h' > /crochet/tmp/excluded-extensions-a
[TRACE]: common.Utilities:get_file_extension_list: dict_keys(['src_path', 'output_file_name'])
[COMMAND]: find /hostap/CVE-2018-14526_11_1/hostap-2018/src -type f -not -name '*\.c' -not -name '*\.h' > /crochet/tmp/excluded-extensions-b
[COMMAND]: diff -ENZBbwqr /hostap/CVE-2018-14526_11_1/hostap-2017/src /hostap/CVE-2018-14526_11_1/hostap-2018/src -X /crochet/tmp/excluded-extensions> /crochet/tmp/diff_all;cat /crochet/tmp/diff_all| grep -P '\.c and ' > /crochet/tmp/diff_C;cat /crochet/tmp/diff_all| grep -P '\.h and ' > /crochet/tmp/diff_H
[INFO]: analysing header files
[TRACE]: tools.Differ:diff_h_files: dict_keys(['project_path_a', 'diff_file_path'])
[INFO]: analysing C/CPP source files
[TRACE]: tools.Differ:diff_c_files: dict_keys(['diff_file_path'])
[INFO]: analysing changed code segments
[TRACE]: tools.Differ:diff_code: dict_keys(['output_file', 'diff_file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/vlan_init.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/vlan_init.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/vlan_init.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/vlan_init.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/vlan_init.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/vlan_init.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/vlan_init.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/vlan_init.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/dpp.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/dpp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/dpp.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/dpp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/common/dpp.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/dpp.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/dpp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/common/dpp.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/gas_server.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/gas_server.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/gas_server.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/gas_server.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/common/gas_server.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/gas_server.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/gas_server.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/common/gas_server.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/wpa_common.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/wpa_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/wpa_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/wpa_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/common/wpa_common.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/wpa_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/wpa_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/common/wpa_common.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/crypto_openssl.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/crypto_openssl.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/crypto_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/crypto_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/crypto_openssl.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/crypto_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/crypto_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/crypto_openssl.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/random.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/random.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/random.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/random.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/random.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/random.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/random.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/random.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_gnutls.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_gnutls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_gnutls.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_gnutls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_gnutls.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_gnutls.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_gnutls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_gnutls.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_internal.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_internal.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_internal.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_internal.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_internal.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_internal.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_internal.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_internal.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_none.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_none.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_none.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_none.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_none.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_none.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_none.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_none.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_openssl.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_openssl.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_openssl.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_openssl.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_wolfssl.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_wolfssl.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_wolfssl.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_wolfssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/crypto/tls_wolfssl.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_wolfssl.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_wolfssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/crypto/tls_wolfssl.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_atheros.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_atheros.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_atheros.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_atheros.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_atheros.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_atheros.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_atheros.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_atheros.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_linux.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_linux.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_linux.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_linux.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_linux.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_linux.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_linux.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_linux.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_qca.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_qca.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_qca.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_qca.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_macsec_qca.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_qca.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_qca.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_macsec_qca.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_capa.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_capa.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_capa.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_capa.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_capa.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_capa.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_capa.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_capa.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_event.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_event.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_event.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_event.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_event.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_event.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_event.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_event.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_monitor.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_monitor.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_monitor.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_monitor.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_monitor.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_monitor.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_monitor.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_monitor.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_scan.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_scan.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_scan.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_scan.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_nl80211_scan.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_scan.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_scan.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_nl80211_scan.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_wext.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_wext.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_wext.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_wext.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/drivers/driver_wext.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_wext.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_wext.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/drivers/driver_wext.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_erp_init 673-783
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap.c.eap_peer_erp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 673 --end-line-number 783 /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap.c.eap_peer_erp_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_erp_init 676-789
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap.c.eap_peer_erp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 676 --end-line-number 789 /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap.c.eap_peer_erp_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_server_sm_deinit 1910-1933
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c.eap_server_sm_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1910 --end-line-number 1933 /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c.eap_server_sm_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_get_identity 1987-1991
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c.eap_get_identity.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1987 --end-line-number 1991 /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server.c.eap_get_identity.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_server_sm_deinit 1910-1934
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c.eap_server_sm_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1910 --end-line-number 1934 /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c.eap_server_sm_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_get_identity 1988-1992
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c.eap_get_identity.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1988 --end-line-number 1992 /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server.c.eap_get_identity.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server_tls_common.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server_tls_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server_tls_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server_tls_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_server/eap_server_tls_common.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server_tls_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server_tls_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_server/eap_server_tls_common.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/eapol_supp/eapol_supp_sm.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eapol_supp/eapol_supp_sm.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/eapol_supp/eapol_supp_sm.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/eapol_supp/eapol_supp_sm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		SM_STATE 487-520
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/eapol_supp/eapol_supp_sm.c.SM_STATE.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 487 --end-line-number 520 /hostap/CVE-2018-14526_11_1/hostap-2017/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/eapol_supp/eapol_supp_sm.c.SM_STATE.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/eapol_supp/eapol_supp_sm.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/eapol_supp/eapol_supp_sm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['end_line', 'is_deckard', 'f_or_struct', 'file_path', 'start_line'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		SM_STATE 487-524
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/eapol_supp/eapol_supp_sm.c.SM_STATE.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 487 --end-line-number 524 /hostap/CVE-2018-14526_11_1/hostap-2018/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/eapol_supp/eapol_supp_sm.c.SM_STATE.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/pae/ieee802_1x_kay.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/pae/ieee802_1x_kay.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/pae/ieee802_1x_kay.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/pae/ieee802_1x_kay.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/pae/ieee802_1x_kay.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/pae/ieee802_1x_kay.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/pae/ieee802_1x_kay.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/pae/ieee802_1x_kay.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/radius/radius_server.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/radius/radius_server.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/radius/radius_server.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/radius/radius_server.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/radius/radius_server.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/radius/radius_server.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/radius/radius_server.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/radius/radius_server.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/tdls.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/tdls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/tdls.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/tdls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/tdls.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/tdls.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/tdls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/tdls.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/wpa.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/wpa.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/wpa.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/wpa.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/rsn_supp/wpa.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/wpa.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/wpa.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/rsn_supp/wpa.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/browser-wpadebug.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/browser-wpadebug.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/browser-wpadebug.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/browser-wpadebug.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/browser-wpadebug.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/browser-wpadebug.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/browser-wpadebug.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/browser-wpadebug.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/wpa_debug.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/wpa_debug.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/wpa_debug.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/wpa_debug.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/wpa_debug.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/wpa_debug.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/wpa_debug.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/wpa_debug.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/xml-utils.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/xml-utils.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/xml-utils.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/xml-utils.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/utils/xml-utils.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/xml-utils.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/xml-utils.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/utils/xml-utils.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/wps/wps_common.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/wps/wps_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/wps/wps_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/wps/wps_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/wps/wps_common.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['pertinent_lines', 'source_file', 'project'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/wps/wps_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/wps/wps_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/wps/wps_common.c

	Successful analysing source diff, after 2.5461361408233643 seconds.
[TRACE]: phases.Differencing:safe_exec: dict_keys(['args', 'title', 'function_def'])
[INFO]: analysing ast diff
[INFO]: running <function analyse_ast_diff at 0x7f7c99650730>
[TRACE]: phases.Differencing:analyse_ast_diff: dict_keys([])
[TRACE]: tools.Differ:diff_ast: dict_keys(['script_file_path', 'project_path_a', 'diff_info', 'project_path_b'])
[INFO]: /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c
[TRACE]: tools.Differ:get_ast_script: dict_keys(['script_file_path', 'source_b', 'source_a'])
[TRACE]: ast.Generator:generate_ast_script: dict_keys(['dump_matches', 'source_a', 'source_b', 'outfile_path'])
[COMMAND]: crochet-diff -s=10 /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c 2> /crochet/tmp/errors_ast_diff > /crochet/tmp/ast-script
[TRACE]: ast.Generator:get_ast_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.Generator:get_ast_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['output_path', 'file_path', 'is_header'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c.AST
[WARNING]: return code:1
[TRACE]: tools.Mapper:map_ast_from_source: dict_keys(['script_file_path', 'source_b', 'source_a'])
[TRACE]: ast.Generator:generate_ast_script: dict_keys(['dump_matches', 'source_a', 'source_b', 'outfile_path'])
[COMMAND]: crochet-diff -s=10 -dump-matches /hostap/CVE-2018-14526_11_1/hostap-2017/src/eap_peer/eap_pwd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/eap_peer/eap_pwd.c 2> /crochet/tmp/errors_ast_diff | grep -P '^Match ' | grep -P '^Match ' > /crochet/tmp/ast-script
[TRACE]: tools.Filter:filter_ast_script: dict_keys(['mapping_ba', 'info_a', 'ast_script', 'info_b'])
[TRACE]: tools.Merger:merge_ast_script: dict_keys(['mapping_ba', 'ast_node_a', 'ast_script', 'ast_node_b'])
[TRACE]: ast.AST:load_from_map: dict_keys(['ast_map'])
[ERROR]: Crash during analysing ast diff, after 0.0315556526184082 seconds.
[ERROR]: dictionary changed size during iteration
[ERROR]: dictionary changed size during iteration
[ERROR]: Unexpected error during analysing ast diff.
[ERROR]: Unexpected error during analysing ast diff.
