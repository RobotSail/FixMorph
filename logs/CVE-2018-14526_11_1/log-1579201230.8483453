[Start] Crochet started at 2020-01-17 03:00:30.848426
[INFO]: Initializing project for Transfer
[INFO]: loading configuration
[COMMAND]: cp -rf /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/hostap-2017/src
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/hostap-2018/src
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src
[INFO]: creating project for /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch
[INFO]: set environment
[COMMAND]: export PYTHONPATH=/home/rshariffdeen/workspace/z3/build/python
[TRACE]: phases.Building:build: dict_keys([])
[INFO]: Building Projects
[TRACE]: phases.Building:safe_exec: dict_keys(['title', 'function_def', 'args'])
[INFO]: building binaries
[INFO]: running <function build_normal at 0x7fbab5b31d90>
[INFO]: restoring projects
[INFO]: cleaning projects
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2017/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2018/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[INFO]: configuring projects
[INFO]: building projects
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2017/src/;bear make -j10
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/hostap-2018/src/;bear make -j10
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src/;bear make -j10
[COMMAND]: cd /hostap/CVE-2018-14526_11_1/FreeBSD-11.1/src-patch/;bear make -j10

	Successful building binaries, after 36.3911817073822 seconds.
[TRACE]: phases.Differencing:diff: dict_keys([])
[INFO]: Analysing Changes
[TRACE]: phases.Differencing:safe_exec: dict_keys(['title', 'function_def', 'args'])
[INFO]: analysing source diff
[INFO]: running <function analyse_source_diff at 0x7fbab4f167b8>
[TRACE]: phases.Differencing:analyse_source_diff: dict_keys([])
[TRACE]: tools.Differ:diff_files: dict_keys(['output_diff_file', 'project_path_b', 'output_ext_a', 'output_ext', 'project_path_a', 'output_c_diff', 'output_h_diff', 'output_ext_b'])
[TRACE]: common.Utilities:get_file_extension_list: dict_keys(['output_file_name', 'src_path'])
[COMMAND]: find /hostap/CVE-2018-14526_11_1/hostap-2017/src -type f -not -name '*\.c' -not -name '*\.h' > /crochet/tmp/excluded-extensions-a
[TRACE]: common.Utilities:get_file_extension_list: dict_keys(['output_file_name', 'src_path'])
[COMMAND]: find /hostap/CVE-2018-14526_11_1/hostap-2018/src -type f -not -name '*\.c' -not -name '*\.h' > /crochet/tmp/excluded-extensions-b
[COMMAND]: diff -ENZBbwqr /hostap/CVE-2018-14526_11_1/hostap-2017/src /hostap/CVE-2018-14526_11_1/hostap-2018/src -X /crochet/tmp/excluded-extensions> /crochet/tmp/diff_all;cat /crochet/tmp/diff_all| grep -P '\.c and ' > /crochet/tmp/diff_C;cat /crochet/tmp/diff_all| grep -P '\.h and ' > /crochet/tmp/diff_H
[INFO]: analysing header files
[TRACE]: tools.Differ:diff_h_files: dict_keys(['project_path_a', 'diff_file_path'])
[INFO]: analysing C/CPP source files
[TRACE]: tools.Differ:diff_c_files: dict_keys(['diff_file_path'])
[INFO]: analysing changed code segments
[TRACE]: tools.Differ:diff_code: dict_keys(['output_file', 'diff_file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/acs.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/acs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/acs.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/acs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/acs.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/acs.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/acs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/acs.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_defaults_bss 40-120
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_defaults_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 40 --end-line-number 120 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_defaults_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_eap_user 399-405
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_free_eap_user.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 399 --end-line-number 405 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_free_eap_user.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_bss 470-634
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_free_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 470 --end-line-number 634 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_free_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_check_bss 790-957
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_check_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 790 --end-line-number 957 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_config_check_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_set_security_params 1026-1091
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_set_security_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1026 --end-line-number 1091 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_config.c.hostapd_set_security_params.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_defaults_bss 45-134
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_defaults_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 45 --end-line-number 134 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_defaults_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_eap_user 413-420
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_free_eap_user.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 413 --end-line-number 420 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_free_eap_user.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_sae_passwords 485-498
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_free_sae_passwords.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 485 --end-line-number 498 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_free_sae_passwords.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_bss 501-681
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_free_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 501 --end-line-number 681 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_free_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_check_bss 837-1006
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_check_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 837 --end-line-number 1006 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_config_check_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_set_security_params 1075-1147
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_set_security_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1075 --end-line-number 1147 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_config.c.hostapd_set_security_params.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_build_ap_extra_ies 67-203
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 67 --end-line-number 203 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_send_action 716-742
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 716 --end-line-number 742 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_build_ap_extra_ies 67-210
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 67 --end-line-number 210 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_send_action 723-758
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 723 --end-line-number 758 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		authsrv_init 148-215
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c.authsrv_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 148 --end-line-number 215 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/authsrv.c.authsrv_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		authsrv_init 158-226
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c.authsrv_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 158 --end-line-number 226 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/authsrv.c.authsrv_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_gen_probe_resp 366-557
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.hostapd_gen_probe_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 366 --end-line-number 557 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.hostapd_gen_probe_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_probe_req 717-968
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.handle_probe_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 717 --end-line-number 968 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.handle_probe_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_build_ap_params 1019-1322
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.ieee802_11_build_ap_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1019 --end-line-number 1322 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/beacon.c.ieee802_11_build_ap_params.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_gen_probe_resp 368-561
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.hostapd_gen_probe_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 368 --end-line-number 561 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.hostapd_gen_probe_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_probe_req 721-991
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.handle_probe_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 721 --end-line-number 991 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.handle_probe_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_build_ap_params 1042-1348
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.ieee802_11_build_ap_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1042 --end-line-number 1348 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/beacon.c.ieee802_11_build_ap_params.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		update_channel_utilization 19-40
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c.update_channel_utilization.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 19 --end-line-number 40 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c.update_channel_utilization.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		bss_load_update_init 43-59
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c.bss_load_update_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 43 --end-line-number 59 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/bss_load.c.bss_load_update_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		get_bss_load_update_timeout 19-39
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.get_bss_load_update_timeout.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 19 --end-line-number 39 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.get_bss_load_update_timeout.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		update_channel_utilization 42-80
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.update_channel_utilization.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 42 --end-line-number 80 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.update_channel_utilization.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		bss_load_update_init 83-93
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.bss_load_update_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 83 --end-line-number 93 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/bss_load.c.bss_load_update_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_sta_tx_rx 29-46
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_get_sta_tx_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 29 --end-line-number 46 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_get_sta_tx_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_sta_mib 87-180
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_sta_mib.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 87 --end-line-number 180 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_sta_mib.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_status 476-582
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 476 --end-line-number 582 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_write_ht_mcs_bitmask 29-50
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_write_ht_mcs_bitmask.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 29 --end-line-number 50 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_write_ht_mcs_bitmask.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_sta_tx_rx 53-164
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_get_sta_tx_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 53 --end-line-number 164 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_get_sta_tx_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_sta_mib 205-345
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_sta_mib.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 205 --end-line-number 345 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_sta_mib.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_status 641-822
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 641 --end-line-number 822 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dfs.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dfs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dfs.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dfs.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_handle_dfs_offload 1097-1124
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dfs.c.hostapd_handle_dfs_offload.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1097 --end-line-number 1124 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dfs.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dfs.c.hostapd_handle_dfs_offload.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dfs.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dfs.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_handle_dfs_offload 1097-1125
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dfs.c.hostapd_handle_dfs_offload.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1097 --end-line-number 1125 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dfs.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dfs.c.hostapd_handle_dfs_offload.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/dpp_hostapd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/dpp_hostapd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_notif_assoc 43-471
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 43 --end-line-number 471 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_sta_low_ack 511-523
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 511 --end-line-number 523 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_ch_switch 526-603
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_ch_switch.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 526 --end-line-number 603 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_ch_switch.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_action_rx 843-912
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_action_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 843 --end-line-number 912 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_action_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_mgmt_rx 951-1020
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_mgmt_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 951 --end-line-number 1020 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.hostapd_mgmt_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_event 1278-1490
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.wpa_supplicant_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1278 --end-line-number 1490 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/drv_callbacks.c.wpa_supplicant_event.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_notif_assoc 104-613
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 104 --end-line-number 613 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_sta_low_ack 653-665
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 653 --end-line-number 665 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_sta_opmode_changed 668-732
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_sta_opmode_changed.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 668 --end-line-number 732 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_sta_opmode_changed.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_ch_switch 735-824
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_ch_switch.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 735 --end-line-number 824 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_ch_switch.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_action_rx 1064-1133
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_action_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1064 --end-line-number 1133 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_action_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_mgmt_rx 1172-1242
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_mgmt_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1172 --end-line-number 1242 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_mgmt_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_wds_sta_interface_status 1500-1519
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_wds_sta_interface_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1500 --end-line-number 1519 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.hostapd_event_wds_sta_interface_status.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_event 1522-1746
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.wpa_supplicant_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1522 --end-line-number 1746 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/drv_callbacks.c.wpa_supplicant_event.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/eap_user_db.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/eap_user_db.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/fils_hlp.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/fils_hlp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/fils_hlp.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/fils_hlp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/fils_hlp.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/fils_hlp.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/fils_hlp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/fils_hlp.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_hs_capab_list 144-170
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.anqp_add_hs_capab_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 144 --end-line-number 170 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.anqp_add_hs_capab_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_capab_list 221-288
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.anqp_add_capab_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 221 --end-line-number 288 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.anqp_add_capab_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_osu_provider 666-740
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.anqp_add_osu_provider.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 666 --end-line-number 740 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.anqp_add_osu_provider.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_build_gas_resp_payload 865-958
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 865 --end-line-number 958 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_query_list_id 987-1084
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.rx_anqp_query_list_id.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 987 --end-line-number 1084 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.rx_anqp_query_list_id.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_hs_query_list 1103-1139
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.rx_anqp_hs_query_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1103 --end-line-number 1139 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.rx_anqp_hs_query_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_initial_req 1396-1509
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1396 --end-line-number 1509 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_comeback_req 1512-1600
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1512 --end-line-number 1600 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_hs_capab_list 161-189
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_hs_capab_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 161 --end-line-number 189 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_hs_capab_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_capab_list 240-307
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_capab_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 240 --end-line-number 307 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_capab_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_venue_url 333-353
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_venue_url.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 333 --end-line-number 353 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_venue_url.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_icon 708-728
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_icon.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 708 --end-line-number 728 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_icon.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_osu_provider 731-787
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_osu_provider.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 731 --end-line-number 787 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_osu_provider.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_operator_icon_metadata 876-897
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_operator_icon_metadata.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 876 --end-line-number 897 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.anqp_add_operator_icon_metadata.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_build_gas_resp_payload 936-1035
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 936 --end-line-number 1035 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_query_list_id 1064-1164
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.rx_anqp_query_list_id.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1064 --end-line-number 1164 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.rx_anqp_query_list_id.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_hs_query_list 1183-1224
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.rx_anqp_hs_query_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1183 --end-line-number 1224 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.rx_anqp_hs_query_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_initial_req 1547-1684
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1547 --end-line-number 1684 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_comeback_req 1687-1791
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1687 --end-line-number 1791 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		channel_list_update_timeout 58-58
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.channel_list_update_timeout.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 58 --end-line-number 58 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.channel_list_update_timeout.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_reload_bss 78-138
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_reload_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 78 --end-line-number 138 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_reload_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup_iface 425-438
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_cleanup_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 425 --end-line-number 438 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_cleanup_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_bss 910-1171
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_setup_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 910 --end-line-number 1171 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_setup_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_interface_complete_sync 1683-1885
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1683 --end-line-number 1885 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_interface_deinit 2055-2086
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_interface_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2055 --end-line-number 2086 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_interface_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_add_iface 2573-2741
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_add_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2573 --end-line-number 2741 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_add_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_new_assoc_sta 2828-2890
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_new_assoc_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2828 --end-line-number 2890 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_new_assoc_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup_cs_params 3183-3193
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_cleanup_cs_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3183 --end-line-number 3193 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hostapd.c.hostapd_cleanup_cs_params.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_interface_setup_failure_handler 60-61
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_interface_setup_failure_handler.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 60 --end-line-number 61 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_interface_setup_failure_handler.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_reload_bss 81-144
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_reload_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 81 --end-line-number 144 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_reload_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup_iface 431-446
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_cleanup_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 431 --end-line-number 446 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_cleanup_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_das_coa 906-941
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_das_coa.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 906 --end-line-number 941 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_das_coa.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_bss 960-1222
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_setup_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 960 --end-line-number 1222 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_setup_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_owe_update_trans 1815-1827
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_owe_update_trans.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1815 --end-line-number 1827 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_owe_update_trans.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_interface_complete_sync 1844-2058
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1844 --end-line-number 2058 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_interface_deinit 2228-2260
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_interface_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2228 --end-line-number 2260 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_interface_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_add_iface 2747-2916
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_add_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2747 --end-line-number 2916 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_add_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_new_assoc_sta 3003-3068
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_new_assoc_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3003 --end-line-number 3068 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_new_assoc_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup_cs_params 3361-3371
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_cleanup_cs_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3361 --end-line-number 3371 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hostapd.c.hostapd_cleanup_cs_params.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hs20_send_wnm_notification_deauth_req 145-177
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c.hs20_send_wnm_notification_deauth_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 145 --end-line-number 177 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hs20.c.hs20_send_wnm_notification_deauth_req.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hs20_send_wnm_notification_deauth_req 147-179
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c.hs20_send_wnm_notification_deauth_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 147 --end-line-number 179 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hs20.c.hs20_send_wnm_notification_deauth_req.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/hw_features.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/hw_features.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		send_auth_reply 276-317
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.send_auth_reply.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 276 --end-line-number 317 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.send_auth_reply.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_auth_ft_finish 321-350
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_auth_ft_finish.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 321 --end-line-number 350 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_auth_ft_finish.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_res_to_status_code 997-1020
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.wpa_res_to_status_code.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 997 --end-line-number 1020 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.wpa_res_to_status_code.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_allowed_address 1481-1514
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_allowed_address.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1481 --end-line-number 1514 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_allowed_address.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_set_radius_info 1517-1561
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_set_radius_info.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1517 --end-line-number 1561 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_set_radius_info.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_auth 1564-1938
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1564 --end-line-number 1938 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		check_ext_capab 2055-2070
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.check_ext_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2055 --end-line-number 2070 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.check_ext_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		check_assoc_ies 2167-2470
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.check_assoc_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2167 --end-line-number 2470 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.check_assoc_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		add_associated_sta 2495-2549
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.add_associated_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2495 --end-line-number 2549 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.add_associated_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		send_assoc_resp 2552-2781
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.send_assoc_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2552 --end-line-number 2781 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.send_assoc_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_assoc 2833-3205
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2833 --end-line-number 3205 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_action 3362-3549
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3362 --end-line-number 3549 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.handle_action.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt 3565-3654
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3565 --end-line-number 3654 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt_cb 4003-4049
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4003 --end-line-number 4049 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		send_auth_reply 277-318
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.send_auth_reply.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 277 --end-line-number 318 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.send_auth_reply.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_auth_ft_finish 322-352
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_auth_ft_finish.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 322 --end-line-number 352 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_auth_ft_finish.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_res_to_status_code 1120-1143
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.wpa_res_to_status_code.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1120 --end-line-number 1143 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.wpa_res_to_status_code.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_allowed_address 1651-1685
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_allowed_address.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1651 --end-line-number 1685 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_allowed_address.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_set_radius_info 1688-1740
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_set_radius_info.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1688 --end-line-number 1740 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_set_radius_info.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_auth 1743-2128
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1743 --end-line-number 2128 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		check_ext_capab 2245-2268
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.check_ext_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2245 --end-line-number 2268 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.check_ext_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		check_assoc_ies 2438-2761
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.check_assoc_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2438 --end-line-number 2761 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.check_assoc_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		add_associated_sta 2786-2851
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.add_associated_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2786 --end-line-number 2851 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.add_associated_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		send_assoc_resp 2854-3096
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.send_assoc_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2854 --end-line-number 3096 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.send_assoc_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_assoc 3203-3586
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3203 --end-line-number 3586 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_action 3743-3928
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3743 --end-line-number 3928 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.handle_action.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt 3944-4042
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_mgmt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3944 --end-line-number 4042 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_mgmt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt_cb 4391-4445
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4391 --end-line-number 4445 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_auth.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_allowed_address 252-348
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 252 --end-line-number 348 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_allowed_address 253-356
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 253 --end-line-number 356 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_he.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_he.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_he.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_he.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_he.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_he.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_he.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_he.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_ht.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_ht.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_ht.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_ht.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_2040_coex_action 229-332
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_ht.c.hostapd_2040_coex_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 229 --end-line-number 332 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_ht.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_ht.c.hostapd_2040_coex_action.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_ht.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_ht.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_2040_coex_action 229-376
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_ht.c.hostapd_2040_coex_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 229 --end-line-number 376 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_ht.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_ht.c.hostapd_2040_coex_action.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ext_capab_byte 167-236
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 167 --end-line-number 236 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_ext_capab 239-298
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 239 --end-line-number 298 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_time_zone 444-459
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_time_zone.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 444 --end-line-number 459 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_time_zone.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_bss_max_idle_period 515-540
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_bss_max_idle_period.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 515 --end-line-number 540 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_bss_max_idle_period.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ext_capab_byte 167-237
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 167 --end-line-number 237 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_ext_capab 240-299
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 240 --end-line-number 299 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_time_zone 445-460
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_time_zone.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 445 --end-line-number 460 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_time_zone.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_bss_max_idle_period 516-541
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_bss_max_idle_period.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 516 --end-line-number 541 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_bss_max_idle_period.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_owe_trans_len 620-629
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_owe_trans_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 620 --end-line-number 629 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_11_shared.c.hostapd_eid_owe_trans_len.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_encapsulate_radius 594-725
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 594 --end-line-number 725 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_new_station 1089-1235
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1089 --end-line-number 1235 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_check_hs20 1593-1640
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_check_hs20.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1593 --end-line-number 1640 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_check_hs20.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_receive_auth 1685-1884
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1685 --end-line-number 1884 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_get_eap_user 2057-2096
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2057 --end-line-number 2096 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_init 2210-2297
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2210 --end-line-number 2297 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_wnm_notif_send 2672-2695
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_wnm_notif_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2672 --end-line-number 2695 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_wnm_notif_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_finished 2699-2754
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_finished.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2699 --end-line-number 2754 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_finished.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_encapsulate_radius 594-760
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 594 --end-line-number 760 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_new_station 1124-1270
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1124 --end-line-number 1270 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_hs20_t_c_filtering 1626-1636
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_hs20_t_c_filtering.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1626 --end-line-number 1636 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_hs20_t_c_filtering.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_check_hs20 1655-1708
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_check_hs20.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1655 --end-line-number 1708 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_check_hs20.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_receive_auth 1753-1963
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1753 --end-line-number 1963 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_get_eap_user 2136-2182
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2136 --end-line-number 2182 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_init 2296-2384
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2296 --end-line-number 2384 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_wnm_notif_send 2759-2791
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_wnm_notif_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2759 --end-line-number 2791 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_wnm_notif_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_finished 2795-2855
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_finished.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2795 --end-line-number 2855 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/ieee802_1x.c.ieee802_1x_finished.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/peerkey_auth.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/peerkey_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/peerkey_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/peerkey_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/peerkey_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/peerkey_auth.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/peerkey_auth.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_auth_create_entry 314-354
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_create_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 314 --end-line-number 354 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_create_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_get_okc 510-526
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_get_okc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 510 --end-line-number 526 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_get_okc.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_auth_create_entry 314-353
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_create_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 314 --end-line-number 353 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_create_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_get_okc 509-525
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c.pmksa_cache_get_okc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 509 --end-line-number 525 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/pmksa_cache_auth.c.pmksa_cache_get_okc.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_free_sta 160-361
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_free_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 160 --end-line-number 361 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_free_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_handle_session_warning_timer 618-632
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_handle_session_warning_timer.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 618 --end-line-number 632 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_handle_session_warning_timer.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_flags_txt 1340-1370
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_sta_flags_txt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1340 --end-line-number 1370 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_sta_flags_txt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_delayed_1x_auth_fail_cb 1373-1386
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_sta_delayed_1x_auth_fail_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1373 --end-line-number 1386 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/sta_info.c.ap_sta_delayed_1x_auth_fail_cb.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_free_sta 160-373
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_free_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 160 --end-line-number 373 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_free_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_handle_session_warning_timer 630-644
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_handle_session_warning_timer.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 630 --end-line-number 644 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_handle_session_warning_timer.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_flags_txt 1352-1383
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_sta_flags_txt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1352 --end-line-number 1383 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_sta_flags_txt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_delayed_1x_auth_fail_cb 1386-1402
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_sta_delayed_1x_auth_fail_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1386 --end-line-number 1402 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/sta_info.c.ap_sta_delayed_1x_auth_fail_cb.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/tkip_countermeasures.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/tkip_countermeasures.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/tkip_countermeasures.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/tkip_countermeasures.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		michael_mic_failure 69-105
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/tkip_countermeasures.c.michael_mic_failure.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 69 --end-line-number 105 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/tkip_countermeasures.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/tkip_countermeasures.c.michael_mic_failure.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/tkip_countermeasures.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/tkip_countermeasures.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		michael_mic_failure 69-110
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/tkip_countermeasures.c.michael_mic_failure.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 69 --end-line-number 110 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/tkip_countermeasures.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/tkip_countermeasures.c.michael_mic_failure.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_send_wnmsleep_resp 47-188
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_send_wnmsleep_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 47 --end-line-number 188 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_send_wnmsleep_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_wnmsleep_req 191-248
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_wnmsleep_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 191 --end-line-number 248 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_wnmsleep_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_bss_trans_mgmt_query 292-318
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_query.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 292 --end-line-number 318 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_query.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_bss_trans_mgmt_resp 321-366
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 321 --end-line-number 366 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_resp.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_send_wnmsleep_resp 47-190
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_send_wnmsleep_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 47 --end-line-number 190 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_send_wnmsleep_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_wnmsleep_req 193-257
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_rx_wnmsleep_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 193 --end-line-number 257 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_rx_wnmsleep_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_bss_trans_mgmt_query 301-341
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_query.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 301 --end-line-number 341 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_query.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_reset_steer_flag_timer 344-354
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ap_sta_reset_steer_flag_timer.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 344 --end-line-number 354 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ap_sta_reset_steer_flag_timer.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_bss_trans_mgmt_resp 357-430
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 357 --end-line-number 430 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_resp.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_psk 110-119
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 110 --end-line-number 119 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_use_aes_cmac 239-253
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_use_aes_cmac.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 239 --end-line-number 253 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_use_aes_cmac.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sta_deinit 691-720
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sta_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 691 --end-line-number 720 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sta_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_try_alt_snonce 845-893
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_try_alt_snonce.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 845 --end-line-number 893 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_try_alt_snonce.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_receive 896-1360
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 896 --end-line-number 1360 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_gmk_to_gtk 1363-1394
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_gmk_to_gtk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1363 --end-line-number 1394 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_gmk_to_gtk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		__wpa_send_eapol 1409-1631
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.__wpa_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1409 --end-line-number 1631 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.__wpa_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_send_eapol 1634-1662
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1634 --end-line-number 1662 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sm_event 1707-1819
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sm_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1707 --end-line-number 1819 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sm_event.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211w_kde_add 2801-2832
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.ieee80211w_kde_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2801 --end-line-number 2832 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.ieee80211w_kde_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_eapol_key_tx_status 4345-4372
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_eapol_key_tx_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4345 --end-line-number 4372 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth.c.wpa_auth_eapol_key_tx_status.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_psk 112-121
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 112 --end-line-number 121 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sta_deinit 676-706
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sta_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 676 --end-line-number 706 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sta_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_try_alt_snonce 831-886
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_try_alt_snonce.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 831 --end-line-number 886 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_try_alt_snonce.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_receive 889-1298
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 889 --end-line-number 1298 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_gmk_to_gtk 1301-1341
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_gmk_to_gtk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1301 --end-line-number 1341 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_gmk_to_gtk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		__wpa_send_eapol 1356-1569
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.__wpa_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1356 --end-line-number 1569 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.__wpa_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_send_eapol 1572-1603
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1572 --end-line-number 1603 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sm_event 1648-1763
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sm_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1648 --end-line-number 1763 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sm_event.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sm_ptk_update 1895-1907
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sm_ptk_update.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1895 --end-line-number 1907 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sm_ptk_update.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211w_kde_add 2826-2858
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.ieee80211w_kde_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2826 --end-line-number 2858 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.ieee80211w_kde_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sta_ft_tk_already_set 3972-3977
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sta_ft_tk_already_set.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3972 --end-line-number 3977 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_sta_ft_tk_already_set.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_add_sae_pmkid 4081-4085
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_add_sae_pmkid.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4081 --end-line-number 4085 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_add_sae_pmkid.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_eapol_key_tx_status 4420-4455
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_eapol_key_tx_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4420 --end-line-number 4455 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth.c.wpa_auth_eapol_key_tx_status.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_tlv_lin 212-242
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_tlv_lin.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 212 --end-line-number 242 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_tlv_lin.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_lin 245-280
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_lin.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 245 --end-line-number 280 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_lin.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_build 323-370
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 323 --end-line-number 370 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_get_psk 439-447
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 439 --end-line-number 447 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_write_ftie 492-538
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_write_ftie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 492 --end-line-number 538 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_write_ftie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_seq_req 594-683
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_seq_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 594 --end-line-number 683 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_seq_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pmk_cache_init 860-867
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 860 --end-line-number 867 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pmk_cache_deinit 870-892
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 870 --end-line-number 892 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_store_pmk_r0 895-917
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 895 --end-line-number 917 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_fetch_pmk_r0 920-941
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 920 --end-line-number 941 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_store_pmk_r1 944-966
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 944 --end-line-number 966 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_fetch_pmk_r1 969-991
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 969 --end-line-number 991 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pull_pmk_r1 1399-1512
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pull_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1399 --end-line-number 1512 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pull_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_derive_ptk_ft 1515-1558
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_derive_ptk_ft.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1515 --end-line-number 1558 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_derive_ptk_ft.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_gtk_subelem 1570-1624
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_gtk_subelem.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1570 --end-line-number 1624 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_gtk_subelem.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_igtk_subelem 1628-1657
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_igtk_subelem.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1628 --end-line-number 1657 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_igtk_subelem.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_write_assoc_resp_ies 1792-1911
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_sm_write_assoc_resp_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1792 --end-line-number 1911 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_sm_write_assoc_resp_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_install_ptk 1926-1952
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_install_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1926 --end-line-number 1952 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_install_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_psk_pmk_r1 1956-2001
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_psk_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1956 --end-line-number 2001 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_psk_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_set_key_mgmt 2007-2041
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_set_key_mgmt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2007 --end-line-number 2041 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_set_key_mgmt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_process_auth_req 2044-2189
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_process_auth_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2044 --end-line-number 2189 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_process_auth_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_validate_reassoc 2235-2385
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_validate_reassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2235 --end-line-number 2385 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_validate_reassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_build_r0 2564-2603
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2564 --end-line-number 2603 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_pull 2606-2747
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_pull.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2606 --end-line-number 2747 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_pull.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_r1 2754-2873
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2754 --end-line-number 2873 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_seq_req 3122-3184
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3122 --end-line-number 3184 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_push_pmk_r1 3518-3550
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_push_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3518 --end-line-number 3550 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_push_pmk_r1.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		cmp_int 196-203
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.cmp_int.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 196 --end-line-number 203 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.cmp_int.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_tlv_lin 305-337
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_tlv_lin.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 305 --end-line-number 337 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_tlv_lin.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_vlan_len 340-358
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_vlan_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 340 --end-line-number 358 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_vlan_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_lin 415-453
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_lin.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 415 --end-line-number 453 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_lin.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_build 496-545
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 496 --end-line-number 545 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_get_psk 614-622
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 614 --end-line-number 622 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_set_vlan 634-640
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_set_vlan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 634 --end-line-number 640 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_set_vlan.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_write_ftie 750-810
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_write_ftie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 750 --end-line-number 810 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_write_ftie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_seq_req 866-955
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_seq_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 866 --end-line-number 955 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_seq_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_expire_pmk_r0 1148-1148
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_expire_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1148 --end-line-number 1148 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_expire_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pmk_cache_init 1230-1241
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1230 --end-line-number 1241 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pmk_cache_deinit 1244-1258
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1244 --end-line-number 1258 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_pmk_cache_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_store_pmk_r0 1261-1322
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1261 --end-line-number 1322 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_fetch_pmk_r0 1325-1345
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1325 --end-line-number 1345 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_store_pmk_r1 1348-1412
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1348 --end-line-number 1412 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_fetch_pmk_r1 1415-1461
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1415 --end-line-number 1461 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pull_pmk_r1 1869-1987
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_pull_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1869 --end-line-number 1987 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_pull_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_store_pmk_fils 1990-2016
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_fils.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1990 --end-line-number 2016 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_fils.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_derive_ptk_ft 2019-2087
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_auth_derive_ptk_ft.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2019 --end-line-number 2087 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_auth_derive_ptk_ft.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_gtk_subelem 2099-2165
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_gtk_subelem.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2099 --end-line-number 2165 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_gtk_subelem.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_igtk_subelem 2169-2214
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_igtk_subelem.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2169 --end-line-number 2214 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_igtk_subelem.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_write_assoc_resp_ies 2349-2501
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_sm_write_assoc_resp_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2349 --end-line-number 2501 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_sm_write_assoc_resp_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_install_ptk 2516-2551
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_install_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2516 --end-line-number 2551 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_install_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_psk_pmk_r1 2555-2627
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_psk_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2555 --end-line-number 2627 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_psk_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_set_key_mgmt 2633-2671
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_set_key_mgmt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2633 --end-line-number 2671 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_set_key_mgmt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_local_derive_pmk_r1 2674-2746
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_local_derive_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2674 --end-line-number 2746 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_local_derive_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_process_auth_req 2749-2952
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_process_auth_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2749 --end-line-number 2952 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_process_auth_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_validate_reassoc 2998-3182
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_validate_reassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2998 --end-line-number 3182 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_validate_reassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_build_r0 3361-3432
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3361 --end-line-number 3432 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_pull 3435-3581
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_pull.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3435 --end-line-number 3581 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_pull.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_r1 3588-3762
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3588 --end-line-number 3762 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_seq_req 4011-4073
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4011 --end-line-number 4073 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_push_pmk_r1 4407-4441
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_push_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4407 --end-line-number 4441 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ft.c.wpa_ft_push_pmk_r1.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_conf 34-125
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_conf.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 34 --end-line-number 125 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_conf.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_get_psk 239-285
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 239 --end-line-number 285 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_set_key 318-333
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_set_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 318 --end-line-number 333 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_set_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_wpa 879-964
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_setup_wpa.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 879 --end-line-number 964 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_setup_wpa.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_conf 35-129
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_conf.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 35 --end-line-number 129 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_conf.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_get_psk 243-310
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 243 --end-line-number 310 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_set_key 343-389
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_set_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 343 --end-line-number 389 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_set_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_set_vlan 839-869
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_set_vlan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 839 --end-line-number 869 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_set_vlan.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_wpa 1173-1266
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_setup_wpa.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1173 --end-line-number 1266 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_glue.c.hostapd_setup_wpa.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_write_rsn_ie 91-362
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_write_rsn_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 91 --end-line-number 362 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_write_rsn_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_validate_wpa_ie 512-840
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_validate_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 512 --end-line-number 840 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_validate_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_parse_generic 880-981
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_parse_generic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 880 --end-line-number 981 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_parse_generic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_uses_mfp 1041-1044
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_auth_uses_mfp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1041 --end-line-number 1044 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wpa_auth_ie.c.wpa_auth_uses_mfp.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_write_rsn_ie 91-374
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.wpa_write_rsn_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 91 --end-line-number 374 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.wpa_write_rsn_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_validate_wpa_ie 524-887
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.wpa_validate_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 524 --end-line-number 887 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.wpa_validate_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_parse_generic 927-998
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.wpa_parse_generic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 927 --end-line-number 998 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wpa_auth_ie.c.wpa_parse_generic.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wps_hostapd.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wps_hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wps_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wps_hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_init_wps 973-1181
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wps_hostapd.c.hostapd_init_wps.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 973 --end-line-number 1181 /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wps_hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2017/src/ap/wps_hostapd.c.hostapd_init_wps.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wps_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wps_hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['is_deckard', 'start_line', 'f_or_struct', 'end_line', 'file_path'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_init_wps 973-1183
[COMMAND]: echo /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wps_hostapd.c.hostapd_init_wps.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 973 --end-line-number 1183 /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wps_hostapd.c -o /hostap/CVE-2018-14526_11_1/hostap-2018/src/ap/wps_hostapd.c.hostapd_init_wps.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/ctrl_iface_common.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/ctrl_iface_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/ctrl_iface_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/ctrl_iface_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2017/src/common/ctrl_iface_common.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['project', 'pertinent_lines', 'source_file'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['use_deckard', 'file_path'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/ctrl_iface_common.c 2> output/errors_AST_dump > /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/ctrl_iface_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2018-14526_11_1/hostap-2018/src/common/ctrl_iface_common.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2018-14526_11_1/hostap-2017/src/common/dpp.c /hostap/CVE-2018-14526_11_1/hostap-2018/src/common/dpp.c > /crochet/tmp/temp_diff
[ERROR]: Crash during analysing source diff, after 63.564799308776855 seconds.
[ERROR]: 'ascii' codec can't decode byte 0xe2 in position 4190: ordinal not in range(128)
[ERROR]: 'ascii' codec can't decode byte 0xe2 in position 4190: ordinal not in range(128)
[ERROR]: Unexpected error during analysing source diff.
[ERROR]: Unexpected error during analysing source diff.
