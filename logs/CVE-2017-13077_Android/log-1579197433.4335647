[Start] Crochet started at 2020-01-17 01:57:13.433685
[INFO]: Initializing project for Transfer
[INFO]: loading configuration
[COMMAND]: cp -rf /hostap/CVE-2017-13077_Android/Android/src /hostap/CVE-2017-13077_Android/Android/src-patch
[INFO]: creating project for /hostap/CVE-2017-13077_Android/hostap-2016/src
[INFO]: creating project for /hostap/CVE-2017-13077_Android/hostap-2017/src
[INFO]: creating project for /hostap/CVE-2017-13077_Android/Android/src
[INFO]: creating project for /hostap/CVE-2017-13077_Android/Android/src-patch
[INFO]: set environment
[COMMAND]: export PYTHONPATH=/home/rshariffdeen/workspace/z3/build/python
[TRACE]: phases.Building:build: dict_keys([])
[INFO]: Building Projects
[TRACE]: phases.Building:safe_exec: dict_keys(['args', 'title', 'function_def'])
[INFO]: building binaries
[INFO]: running <function build_normal at 0x7fd075d5ee18>
[INFO]: restoring projects
[INFO]: cleaning projects
[COMMAND]: cd /hostap/CVE-2017-13077_Android/hostap-2016/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2017-13077_Android/hostap-2017/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2017-13077_Android/Android/src/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[COMMAND]: cd /hostap/CVE-2017-13077_Android/Android/src-patch/; make clean; make distclean; rm compile_commands.json; rm CMakeCache.txt; rm -rf CMakeFiles
[INFO]: configuring projects
[INFO]: building projects
[COMMAND]: cd /hostap/CVE-2017-13077_Android/hostap-2016/src/;bear make -j10
[COMMAND]: cd /hostap/CVE-2017-13077_Android/hostap-2017/src/;bear make -j10
[COMMAND]: cd /hostap/CVE-2017-13077_Android/Android/src/;bear make -j10
[COMMAND]: cd /hostap/CVE-2017-13077_Android/Android/src-patch/;bear make -j10

	Successful building binaries, after 46.954107999801636 seconds.
[TRACE]: phases.Differencing:diff: dict_keys([])
[INFO]: Analysing Changes
[TRACE]: phases.Differencing:safe_exec: dict_keys(['args', 'title', 'function_def'])
[INFO]: analysing source diff
[INFO]: running <function analyse_source_diff at 0x7fd0751437b8>
[TRACE]: phases.Differencing:analyse_source_diff: dict_keys([])
[TRACE]: tools.Differ:diff_files: dict_keys(['output_ext', 'output_h_diff', 'project_path_b', 'output_ext_a', 'output_diff_file', 'output_ext_b', 'project_path_a', 'output_c_diff'])
[TRACE]: common.Utilities:get_file_extension_list: dict_keys(['output_file_name', 'src_path'])
[COMMAND]: find /hostap/CVE-2017-13077_Android/hostap-2016/src -type f -not -name '*\.c' -not -name '*\.h' > /crochet/tmp/excluded-extensions-a
[TRACE]: common.Utilities:get_file_extension_list: dict_keys(['output_file_name', 'src_path'])
[COMMAND]: find /hostap/CVE-2017-13077_Android/hostap-2017/src -type f -not -name '*\.c' -not -name '*\.h' > /crochet/tmp/excluded-extensions-b
[COMMAND]: diff -ENZBbwqr /hostap/CVE-2017-13077_Android/hostap-2016/src /hostap/CVE-2017-13077_Android/hostap-2017/src -X /crochet/tmp/excluded-extensions> /crochet/tmp/diff_all;cat /crochet/tmp/diff_all| grep -P '\.c and ' > /crochet/tmp/diff_C;cat /crochet/tmp/diff_all| grep -P '\.h and ' > /crochet/tmp/diff_H
[INFO]: analysing header files
[TRACE]: tools.Differ:diff_h_files: dict_keys(['diff_file_path', 'project_path_a'])
[INFO]: analysing C/CPP source files
[TRACE]: tools.Differ:diff_c_files: dict_keys(['diff_file_path'])
[INFO]: analysing changed code segments
[TRACE]: tools.Differ:diff_code: dict_keys(['output_file', 'diff_file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/accounting.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/accounting.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/accounting.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/accounting.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		accounting_msg 34-169
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/accounting.c.accounting_msg.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 34 --end-line-number 169 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/accounting.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/accounting.c.accounting_msg.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/accounting.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/accounting.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		accounting_msg 34-164
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/accounting.c.accounting_msg.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 34 --end-line-number 164 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/accounting.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/accounting.c.accounting_msg.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/acs.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/acs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/acs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/acs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/acs.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/acs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/acs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/acs.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_defaults_bss 39-98
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_defaults_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 39 --end-line-number 98 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_defaults_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_defaults 101-196
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_defaults.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 101 --end-line-number 196 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_defaults.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_wpa_psk 315-339
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_setup_wpa_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 315 --end-line-number 339 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_setup_wpa_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_bss 423-586
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_free_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 423 --end-line-number 586 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_free_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_check_bss 742-890
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_check_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 742 --end-line-number 890 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_config.c.hostapd_config_check_bss.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_defaults_bss 40-120
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_defaults_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 40 --end-line-number 120 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_defaults_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_defaults 123-223
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_defaults.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 123 --end-line-number 223 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_defaults.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_wpa_psk 342-360
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_setup_wpa_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 342 --end-line-number 360 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_setup_wpa_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_eap_users 408-417
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_free_eap_users.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 408 --end-line-number 417 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_free_eap_users.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_fils_realms 456-467
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_free_fils_realms.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 456 --end-line-number 467 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_free_fils_realms.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_free_bss 470-634
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_free_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 470 --end-line-number 634 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_free_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_check_bss 790-957
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_check_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 790 --end-line-number 957 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_config.c.hostapd_config_check_bss.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_build_ap_extra_ies 66-195
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 66 --end-line-number 195 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_sta_auth 340-347
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_sta_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 340 --end-line-number 347 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_sta_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_hw_feature_data 555-564
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_get_hw_feature_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 555 --end-line-number 564 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_get_hw_feature_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_send_mlme 623-630
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_send_mlme.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 623 --end-line-number 630 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_send_mlme.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_sta_deauth 644-651
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_sta_deauth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 644 --end-line-number 651 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_sta_deauth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_sta_disassoc 654-661
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_sta_disassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 654 --end-line-number 661 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_sta_disassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_send_action 674-700
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 674 --end-line-number 700 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_set_qos_map 754-761
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_set_qos_map.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 754 --end-line-number 761 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_set_qos_map.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_hw_mode_any_channels 764-780
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_get_hw_mode_any_channels.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 764 --end-line-number 780 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_get_hw_mode_any_channels.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_do_acs 797-874
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_do_acs.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 797 --end-line-number 874 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_drv_ops.c.hostapd_drv_do_acs.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_build_ap_extra_ies 67-203
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 67 --end-line-number 203 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_build_ap_extra_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_sta_auth 348-389
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_sta_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 348 --end-line-number 389 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_sta_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_hw_feature_data 597-606
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_get_hw_feature_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 597 --end-line-number 606 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_get_hw_feature_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_send_mlme 665-672
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_send_mlme.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 665 --end-line-number 672 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_send_mlme.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_sta_deauth 686-693
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_sta_deauth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 686 --end-line-number 693 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_sta_deauth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_sta_disassoc 696-703
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_sta_disassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 696 --end-line-number 703 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_sta_disassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_send_action 716-742
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 716 --end-line-number 742 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_send_action.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_set_qos_map 796-803
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_set_qos_map.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 796 --end-line-number 803 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_set_qos_map.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_hw_mode_any_channels 806-824
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_get_hw_mode_any_channels.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 806 --end-line-number 824 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_get_hw_mode_any_channels.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_drv_do_acs 841-921
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_do_acs.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 841 --end-line-number 921 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_drv_ops.c.hostapd_drv_do_acs.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mlme_authenticate_indication 53-63
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.mlme_authenticate_indication.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 53 --end-line-number 63 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.mlme_authenticate_indication.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mlme_associate_indication 102-111
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.mlme_associate_indication.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 102 --end-line-number 111 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.mlme_associate_indication.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mlme_reassociate_indication 126-136
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.mlme_reassociate_indication.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 126 --end-line-number 136 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ap_mlme.c.mlme_reassociate_indication.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mlme_authenticate_indication 53-67
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.mlme_authenticate_indication.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 53 --end-line-number 67 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.mlme_authenticate_indication.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mlme_associate_indication 106-118
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.mlme_associate_indication.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 106 --end-line-number 118 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.mlme_associate_indication.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mlme_reassociate_indication 133-146
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.mlme_reassociate_indication.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 133 --end-line-number 146 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ap_mlme.c.mlme_reassociate_indication.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/authsrv.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/authsrv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/authsrv.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/authsrv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/authsrv.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/authsrv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_gen_probe_resp 365-537
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.hostapd_gen_probe_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 365 --end-line-number 537 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.hostapd_gen_probe_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_expire 580-604
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.sta_track_expire.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 580 --end-line-number 604 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.sta_track_expire.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_add 620-647
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.sta_track_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 620 --end-line-number 647 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.sta_track_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_probe_req 676-912
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.handle_probe_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 676 --end-line-number 912 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.handle_probe_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_build_ap_params 953-1234
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.ieee802_11_build_ap_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 953 --end-line-number 1234 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/beacon.c.ieee802_11_build_ap_params.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_gen_probe_resp 366-557
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.hostapd_gen_probe_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 366 --end-line-number 557 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.hostapd_gen_probe_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_expire 600-624
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.sta_track_expire.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 600 --end-line-number 624 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.sta_track_expire.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_add 640-671
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.sta_track_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 640 --end-line-number 671 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.sta_track_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_probe_req 717-968
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.handle_probe_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 717 --end-line-number 968 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.handle_probe_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_del 1009-1016
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.sta_track_del.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1009 --end-line-number 1016 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.sta_track_del.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_build_ap_params 1019-1322
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.ieee802_11_build_ap_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1019 --end-line-number 1322 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/beacon.c.ieee802_11_build_ap_params.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_deauthenticate 306-366
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_deauthenticate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 306 --end-line-number 366 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_deauthenticate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_disassociate 369-429
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_disassociate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 369 --end-line-number 429 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_disassociate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_status 453-551
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 453 --end-line-number 551 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_pmksa_flush 607-610
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_pmksa_flush.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 607 --end-line-number 610 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_pmksa_flush.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_deauthenticate 307-367
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_deauthenticate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 307 --end-line-number 367 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_deauthenticate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_disassociate 370-430
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_disassociate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 370 --end-line-number 430 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_disassociate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_status 476-582
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 476 --end-line-number 582 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_status.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ctrl_iface_pmksa_add 644-689
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_pmksa_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 644 --end-line-number 689 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ctrl_iface_ap.c.hostapd_ctrl_iface_pmksa_add.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_dfs_complete_cac 750-776
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c.hostapd_dfs_complete_cac.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 750 --end-line-number 776 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c.hostapd_dfs_complete_cac.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_dfs_start_channel_switch 820-935
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c.hostapd_dfs_start_channel_switch.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 820 --end-line-number 935 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dfs.c.hostapd_dfs_start_channel_switch.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_config_dfs_chan_available 750-764
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_config_dfs_chan_available.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 750 --end-line-number 764 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_config_dfs_chan_available.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_dfs_complete_cac 767-806
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_dfs_complete_cac.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 767 --end-line-number 806 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_dfs_complete_cac.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_dfs_pre_cac_expired 809-825
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_dfs_pre_cac_expired.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 809 --end-line-number 825 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_dfs_pre_cac_expired.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_dfs_start_channel_switch 869-991
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_dfs_start_channel_switch.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 869 --end-line-number 991 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dfs.c.hostapd_dfs_start_channel_switch.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_dhcp 56-158
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c.handle_dhcp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 56 --end-line-number 158 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c.handle_dhcp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		dhcp_snoop_deinit 176-179
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c.dhcp_snoop_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 176 --end-line-number 179 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dhcp_snoop.c.dhcp_snoop_deinit.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_dhcp 32-136
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c.handle_dhcp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 32 --end-line-number 136 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c.handle_dhcp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		dhcp_snoop_deinit 154-158
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c.dhcp_snoop_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 154 --end-line-number 158 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dhcp_snoop.c.dhcp_snoop_deinit.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dpp_hostapd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dpp_hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dpp_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dpp_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/dpp_hostapd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dpp_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dpp_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/dpp_hostapd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_notif_assoc 40-423
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 40 --end-line-number 423 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_sta_low_ack 463-476
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 463 --end-line-number 476 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_notif_auth 715-755
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_notif_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 715 --end-line-number 755 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_notif_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_action_rx 758-811
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_action_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 758 --end-line-number 811 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.hostapd_action_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_event 1167-1374
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.wpa_supplicant_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1167 --end-line-number 1374 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/drv_callbacks.c.wpa_supplicant_event.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_notif_assoc 43-471
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 43 --end-line-number 471 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_notif_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_sta_low_ack 511-523
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 511 --end-line-number 523 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_sta_low_ack.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_notif_auth 788-840
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_notif_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 788 --end-line-number 840 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_notif_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_action_rx 843-912
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_action_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 843 --end-line-number 912 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_action_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_event_dfs_pre_cac_expired 1226-1233
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_dfs_pre_cac_expired.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1226 --end-line-number 1233 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.hostapd_event_dfs_pre_cac_expired.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_event 1278-1490
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.wpa_supplicant_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1278 --end-line-number 1490 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/drv_callbacks.c.wpa_supplicant_event.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/eth_p_oui.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/eth_p_oui.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/eth_p_oui.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/eth_p_oui.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/eth_p_oui.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/eth_p_oui.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/eth_p_oui.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/eth_p_oui.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/fils_hlp.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/fils_hlp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/fils_hlp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/fils_hlp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/fils_hlp.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/fils_hlp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/fils_hlp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/fils_hlp.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_query_ap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_query_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_query_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_query_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_query_ap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_query_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_query_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_query_ap.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_dialog_create 29-84
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_dialog_create.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 29 --end-line-number 84 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_dialog_create.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_capab_list 218-276
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.anqp_add_capab_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 218 --end-line-number 276 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.anqp_add_capab_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_osu_provider 624-698
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.anqp_add_osu_provider.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 624 --end-line-number 698 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.anqp_add_osu_provider.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_build_gas_resp_payload 807-884
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 807 --end-line-number 884 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_query_list_id 913-1003
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.rx_anqp_query_list_id.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 913 --end-line-number 1003 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.rx_anqp_query_list_id.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_vendor_specific 1095-1162
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.rx_anqp_vendor_specific.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1095 --end-line-number 1162 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.rx_anqp_vendor_specific.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_req_local_processing 1167-1240
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_req_local_processing.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1167 --end-line-number 1240 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_req_local_processing.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_initial_req 1243-1358
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1243 --end-line-number 1358 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_comeback_req 1361-1449
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1361 --end-line-number 1449 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_init 1494-1502
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1494 --end-line-number 1502 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/gas_serv.c.gas_serv_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_dialog_create 29-87
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_dialog_create.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 29 --end-line-number 87 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_dialog_create.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_capab_list 221-288
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.anqp_add_capab_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 221 --end-line-number 288 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.anqp_add_capab_list.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		anqp_add_osu_provider 666-740
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.anqp_add_osu_provider.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 666 --end-line-number 740 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.anqp_add_osu_provider.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_build_gas_resp_payload 865-958
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 865 --end-line-number 958 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_build_gas_resp_payload.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_query_list_id 987-1084
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.rx_anqp_query_list_id.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 987 --end-line-number 1084 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.rx_anqp_query_list_id.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_vendor_specific_hs20 1176-1206
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.rx_anqp_vendor_specific_hs20.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1176 --end-line-number 1206 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.rx_anqp_vendor_specific_hs20.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rx_anqp_vendor_specific 1276-1317
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.rx_anqp_vendor_specific.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1276 --end-line-number 1317 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.rx_anqp_vendor_specific.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_req_local_processing 1320-1393
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_req_local_processing.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1320 --end-line-number 1393 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_req_local_processing.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_initial_req 1396-1509
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1396 --end-line-number 1509 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_initial_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_rx_gas_comeback_req 1512-1600
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1512 --end-line-number 1600 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_rx_gas_comeback_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_serv_init 1645-1650
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1645 --end-line-number 1650 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/gas_serv.c.gas_serv_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_reload_bss 74-131
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_reload_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 74 --end-line-number 131 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_reload_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_broadcast_key_clear_iface 208-236
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_broadcast_key_clear_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 208 --end-line-number 236 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_broadcast_key_clear_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_free_hapd_data 265-344
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_free_hapd_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 265 --end-line-number 344 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_free_hapd_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup 355-363
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_cleanup.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 355 --end-line-number 363 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_cleanup.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_deinit 366-379
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.sta_track_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 366 --end-line-number 379 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.sta_track_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup_iface_partial 382-398
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_cleanup_iface_partial.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 382 --end-line-number 398 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_cleanup_iface_partial.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_flush_old_stations 469-493
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_flush_old_stations.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 469 --end-line-number 493 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_flush_old_stations.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_bss 890-1142
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_setup_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 890 --end-line-number 1142 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_setup_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_tx_queue_params 1145-1166
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_tx_queue_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1145 --end-line-number 1166 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_tx_queue_params.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_set_own_neighbor_report 1555-1651
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_set_own_neighbor_report.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1555 --end-line-number 1651 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_set_own_neighbor_report.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_interface_complete_sync 1654-1857
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1654 --end-line-number 1857 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_alloc_bss_data 1985-2005
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_alloc_bss_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1985 --end-line-number 2005 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_alloc_bss_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_init 2078-2129
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2078 --end-line-number 2129 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_iface_alloc 2411-2432
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_iface_alloc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2411 --end-line-number 2432 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_iface_alloc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_new_assoc_sta 2779-2832
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_new_assoc_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2779 --end-line-number 2832 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_new_assoc_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_build_beacon_data 2897-2985
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_build_beacon_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2897 --end-line-number 2985 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hostapd.c.hostapd_build_beacon_data.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_reload_bss 78-138
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_reload_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 78 --end-line-number 138 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_reload_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_broadcast_key_clear_iface 215-243
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_broadcast_key_clear_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 215 --end-line-number 243 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_broadcast_key_clear_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_free_hapd_data 272-356
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_free_hapd_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 272 --end-line-number 356 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_free_hapd_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup 367-377
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_cleanup.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 367 --end-line-number 377 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_cleanup.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		sta_track_deinit 380-393
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.sta_track_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 380 --end-line-number 393 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.sta_track_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_cleanup_iface_partial 396-415
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_cleanup_iface_partial.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 396 --end-line-number 415 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_cleanup_iface_partial.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_flush_old_stations 486-513
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_flush_old_stations.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 486 --end-line-number 513 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_flush_old_stations.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_bss 910-1171
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_setup_bss.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 910 --end-line-number 1171 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_setup_bss.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_tx_queue_params 1174-1195
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_tx_queue_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1174 --end-line-number 1195 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_tx_queue_params.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_set_own_neighbor_report 1584-1680
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_set_own_neighbor_report.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1584 --end-line-number 1680 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_set_own_neighbor_report.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_interface_complete_sync 1683-1885
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1683 --end-line-number 1885 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_setup_interface_complete_sync.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_alloc_bss_data 2013-2040
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_alloc_bss_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2013 --end-line-number 2040 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_alloc_bss_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_alloc_iface 2104-2115
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_alloc_iface.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2104 --end-line-number 2115 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_alloc_iface.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_init 2127-2178
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2127 --end-line-number 2178 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_iface_alloc 2460-2481
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_iface_alloc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2460 --end-line-number 2481 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_iface_alloc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_new_assoc_sta 2828-2890
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_new_assoc_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2828 --end-line-number 2890 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_new_assoc_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_build_beacon_data 2955-3035
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_build_beacon_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2955 --end-line-number 3035 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hostapd.c.hostapd_build_beacon_data.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_hw_features 75-142
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_get_hw_features.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 75 --end-line-number 142 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_get_hw_features.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_is_usable_chan 763-789
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_is_usable_chan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 763 --end-line-number 789 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_is_usable_chan.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_is_usable_chans 792-802
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_is_usable_chans.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 792 --end-line-number 802 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_is_usable_chans.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_hw_get_channel 979-982
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_hw_get_channel.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 979 --end-line-number 982 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/hw_features.c.hostapd_hw_get_channel.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_hw_features 75-145
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_get_hw_features.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 75 --end-line-number 145 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_get_hw_features.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_is_usable_chan 695-723
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_is_usable_chan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 695 --end-line-number 723 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_is_usable_chan.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_is_usable_chans 726-755
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_is_usable_chans.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 726 --end-line-number 755 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_is_usable_chans.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_hw_get_channel 932-949
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_hw_get_channel.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 932 --end-line-number 949 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/hw_features.c.hostapd_hw_get_channel.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/iapp.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/iapp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/iapp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/iapp.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		iapp_init 376-500
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/iapp.c.iapp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 376 --end-line-number 500 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/iapp.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/iapp.c.iapp_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/iapp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/iapp.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		iapp_init 376-513
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/iapp.c.iapp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 376 --end-line-number 513 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/iapp.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/iapp.c.iapp_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_auth 982-1375
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 982 --end-line-number 1375 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_aid 1378-1408
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.hostapd_get_aid.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1378 --end-line-number 1408 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.hostapd_get_aid.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		copy_supp_rates 1455-1481
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.copy_supp_rates.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1455 --end-line-number 1481 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.copy_supp_rates.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		check_assoc_ies 1502-1810
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.check_assoc_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1502 --end-line-number 1810 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.check_assoc_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		send_assoc_resp 1892-2031
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.send_assoc_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1892 --end-line-number 2031 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.send_assoc_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_assoc 2034-2284
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2034 --end-line-number 2284 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_disassoc 2287-2337
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_disassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2287 --end-line-number 2337 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_disassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_action 2430-2585
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2430 --end-line-number 2585 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_action.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt 2601-2695
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.ieee802_11_mgmt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2601 --end-line-number 2695 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.ieee802_11_mgmt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_assoc_cb 2772-2898
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_assoc_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2772 --end-line-number 2898 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_assoc_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_deauth_cb 2901-2922
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_deauth_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2901 --end-line-number 2922 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_deauth_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_disassoc_cb 2925-2946
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_disassoc_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2925 --end-line-number 2946 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.handle_disassoc_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt_cb 2958-3003
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2958 --end-line-number 3003 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_from_unknown 3106-3156
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.ieee802_11_rx_from_unknown.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3106 --end-line-number 3156 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11.c.ieee802_11_rx_from_unknown.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_res_to_status_code 997-1020
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.wpa_res_to_status_code.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 997 --end-line-number 1020 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.wpa_res_to_status_code.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_auth 1564-1938
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1564 --end-line-number 1938 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_get_aid 1941-1974
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.hostapd_get_aid.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1941 --end-line-number 1974 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.hostapd_get_aid.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		copy_supp_rates 2021-2052
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.copy_supp_rates.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2021 --end-line-number 2052 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.copy_supp_rates.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		check_assoc_ies 2167-2470
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.check_assoc_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2167 --end-line-number 2470 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.check_assoc_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		send_assoc_resp 2552-2781
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.send_assoc_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2552 --end-line-number 2781 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.send_assoc_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_assoc 2833-3205
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2833 --end-line-number 3205 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_disassoc 3208-3269
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_disassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3208 --end-line-number 3269 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_disassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_action 3362-3549
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_action.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3362 --end-line-number 3549 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_action.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt 3565-3654
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3565 --end-line-number 3654 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_assoc_cb 3731-3884
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_assoc_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3731 --end-line-number 3884 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_assoc_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_deauth_cb 3887-3908
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_deauth_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3887 --end-line-number 3908 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_deauth_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_disassoc_cb 3911-3932
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_disassoc_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3911 --end-line-number 3932 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_disassoc_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		handle_action_cb 3935-3991
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_action_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3935 --end-line-number 3991 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.handle_action_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_mgmt_cb 4003-4049
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4003 --end-line-number 4049 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.ieee802_11_mgmt_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_from_unknown 4152-4214
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.ieee802_11_rx_from_unknown.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4152 --end-line-number 4214 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11.c.ieee802_11_rx_from_unknown.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_allowed_address 252-349
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 252 --end-line-number 349 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_acl_deinit 662-676
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c.hostapd_acl_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 662 --end-line-number 676 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_auth.c.hostapd_acl_deinit.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_allowed_address 252-348
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 252 --end-line-number 348 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c.hostapd_allowed_address.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_acl_deinit 661-677
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c.hostapd_acl_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 661 --end-line-number 677 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_auth.c.hostapd_acl_deinit.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_he.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_he.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_he.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_he.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_he.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_he.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_he.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_he.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_ht.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_ht.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_ht.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_ht.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		copy_sta_ht_capab 335-363
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_ht.c.copy_sta_ht_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 335 --end-line-number 363 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_ht.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_ht.c.copy_sta_ht_capab.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_ht.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_ht.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		copy_sta_ht_capab 335-363
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_ht.c.copy_sta_ht_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 335 --end-line-number 363 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_ht.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_ht.c.copy_sta_ht_capab.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ext_capab_byte 167-222
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 167 --end-line-number 222 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_ext_capab 225-276
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 225 --end-line-number 276 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_copy_sta_supp_op_classes 563-577
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.ap_copy_sta_supp_op_classes.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 563 --end-line-number 577 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_shared.c.ap_copy_sta_supp_op_classes.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_ext_capab_byte 167-236
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 167 --end-line-number 236 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_ext_capab_byte.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_ext_capab 239-298
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 239 --end-line-number 298 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.hostapd_eid_ext_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_copy_sta_supp_op_classes 585-599
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.ap_copy_sta_supp_op_classes.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 585 --end-line-number 599 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_shared.c.ap_copy_sta_supp_op_classes.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_vht_capabilities 23-59
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.hostapd_eid_vht_capabilities.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 23 --end-line-number 59 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.hostapd_eid_vht_capabilities.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		copy_sta_vht_capab 320-345
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.copy_sta_vht_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 320 --end-line-number 345 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.copy_sta_vht_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_vendor_vht 386-405
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.hostapd_eid_vendor_vht.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 386 --end-line-number 405 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_11_vht.c.hostapd_eid_vendor_vht.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_vht_capabilities 23-71
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.hostapd_eid_vht_capabilities.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 23 --end-line-number 71 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.hostapd_eid_vht_capabilities.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		copy_sta_vht_capab 332-357
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.copy_sta_vht_capab.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 332 --end-line-number 357 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.copy_sta_vht_capab.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_eid_vendor_vht 398-417
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.hostapd_eid_vendor_vht.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 398 --end-line-number 417 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_11_vht.c.hostapd_eid_vendor_vht.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_learn_identity 302-335
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_learn_identity.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 302 --end-line-number 335 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_learn_identity.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		add_common_radius_sta_attr 400-494
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.add_common_radius_sta_attr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 400 --end-line-number 494 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.add_common_radius_sta_attr.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_encapsulate_radius 590-721
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 590 --end-line-number 721 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_alloc_eapol_sm 847-861
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_alloc_eapol_sm.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 847 --end-line-number 861 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_alloc_eapol_sm.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_receive 896-1072
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 896 --end-line-number 1072 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_new_station 1083-1205
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1083 --end-line-number 1205 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_store_radius_class 1360-1412
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_store_radius_class.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1360 --end-line-number 1412 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_store_radius_class.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_receive_auth 1656-1842
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1656 --end-line-number 1842 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_get_eap_user 2015-2055
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2015 --end-line-number 2055 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_eapol_tx_status 2313-2364
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_eapol_tx_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2313 --end-line-number 2364 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_eapol_tx_status.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_finished 2648-2712
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_finished.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2648 --end-line-number 2712 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ieee802_1x.c.ieee802_1x_finished.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_learn_identity 304-338
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_learn_identity.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 304 --end-line-number 338 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_learn_identity.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		add_common_radius_sta_attr 403-498
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.add_common_radius_sta_attr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 403 --end-line-number 498 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.add_common_radius_sta_attr.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_encapsulate_radius 594-725
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 594 --end-line-number 725 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_encapsulate_radius.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_alloc_eapol_sm 851-865
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_alloc_eapol_sm.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 851 --end-line-number 865 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_alloc_eapol_sm.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_receive 900-1078
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 900 --end-line-number 1078 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_new_station 1089-1235
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1089 --end-line-number 1235 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_new_station.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_store_radius_class 1390-1441
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_store_radius_class.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1390 --end-line-number 1441 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_store_radius_class.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_receive_auth 1685-1884
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1685 --end-line-number 1884 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_receive_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_get_eap_user 2057-2096
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2057 --end-line-number 2096 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_get_eap_user.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_eapol_tx_status 2354-2415
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_eapol_tx_status.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2354 --end-line-number 2415 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_eapol_tx_status.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_1x_finished 2699-2754
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_finished.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2699 --end-line-number 2754 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ieee802_1x.c.ieee802_1x_finished.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/mbo_ap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/mbo_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/mbo_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/mbo_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/mbo_ap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/mbo_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/mbo_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/mbo_ap.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ndisc_snoop.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ndisc_snoop.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ndisc_snoop.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ndisc_snoop.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ndisc_snoop_deinit 182-185
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ndisc_snoop.c.ndisc_snoop_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 182 --end-line-number 185 /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ndisc_snoop.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/ndisc_snoop.c.ndisc_snoop_deinit.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ndisc_snoop.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ndisc_snoop.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ndisc_snoop_deinit 182-186
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ndisc_snoop.c.ndisc_snoop_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 182 --end-line-number 186 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ndisc_snoop.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/ndisc_snoop.c.ndisc_snoop_deinit.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/neighbor_db.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/neighbor_db.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/neighbor_db.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/neighbor_db.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_neighbor_clear_entry 36-47
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c.hostapd_neighbor_clear_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 36 --end-line-number 47 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c.hostapd_neighbor_clear_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_neighbor_set 65-106
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c.hostapd_neighbor_set.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 65 --end-line-number 106 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/neighbor_db.c.hostapd_neighbor_set.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/peerkey_auth.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/peerkey_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/peerkey_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/peerkey_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/peerkey_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/peerkey_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/pmksa_cache_auth.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/pmksa_cache_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/pmksa_cache_auth.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/pmksa_cache_auth.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_auth_add 278-295
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 278 --end-line-number 295 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_auth_create_entry 314-354
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_create_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 314 --end-line-number 354 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_create_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_auth_add_entry 366-391
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_add_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 366 --end-line-number 391 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/pmksa_cache_auth.c.pmksa_cache_auth_add_entry.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/rrm.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/rrm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/rrm.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/rrm.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_handle_beacon_report 74-92
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_handle_beacon_report.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 74 --end-line-number 92 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_handle_beacon_report.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_handle_radio_msmt_report 95-136
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_handle_radio_msmt_report.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 95 --end-line-number 136 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_handle_radio_msmt_report.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_parse_location_lci_req_age 139-153
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_parse_location_lci_req_age.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 139 --end-line-number 153 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_parse_location_lci_req_age.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_check_lci_age 156-180
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_check_lci_age.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 156 --end-line-number 180 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_check_lci_age.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_send_lci_req 367-437
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_send_lci_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 367 --end-line-number 437 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_send_lci_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_send_range_req 440-556
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_send_range_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 440 --end-line-number 556 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_send_range_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_clean_rrm 559-566
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_clean_rrm.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 559 --end-line-number 566 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/rrm.c.hostapd_clean_rrm.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/sta_info.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/sta_info.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/sta_info.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/sta_info.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_delayed_1x_auth_fail_cb 52-52
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_delayed_1x_auth_fail_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 52 --end-line-number 52 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_delayed_1x_auth_fail_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_free_sta 160-361
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_free_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 160 --end-line-number 361 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_free_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_add 644-696
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 644 --end-line-number 696 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_disassociate 762-796
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_disassociate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 762 --end-line-number 796 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_disassociate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_deauthenticate 811-845
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_deauthenticate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 811 --end-line-number 845 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_deauthenticate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_disconnect 1234-1288
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_disconnect.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1234 --end-line-number 1288 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_disconnect.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_clear_disconnect_timeouts 1315-1337
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_clear_disconnect_timeouts.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1315 --end-line-number 1337 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_clear_disconnect_timeouts.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ap_sta_flags_txt 1340-1370
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_flags_txt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1340 --end-line-number 1370 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/sta_info.c.ap_sta_flags_txt.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/taxonomy.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/taxonomy.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/taxonomy.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/taxonomy.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/taxonomy.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/taxonomy.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/taxonomy.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/ap/taxonomy.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wmm.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wmm.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wmm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wmm.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wmm.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wmm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wmm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wmm_process_tspec 153-225
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wmm.c.wmm_process_tspec.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 153 --end-line-number 225 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wmm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wmm.c.wmm_process_tspec.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wnm_ap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wnm_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wnm_ap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wnm_ap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_send_wnmsleep_resp 47-188
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_send_wnmsleep_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 47 --end-line-number 188 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_send_wnmsleep_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_wnmsleep_req 191-248
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_wnmsleep_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 191 --end-line-number 248 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_wnmsleep_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_send_bss_trans_mgmt_request 251-289
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_send_bss_trans_mgmt_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 251 --end-line-number 289 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_send_bss_trans_mgmt_request.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_rx_bss_trans_mgmt_query 292-318
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_query.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 292 --end-line-number 318 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wnm_ap.c.ieee802_11_rx_bss_trans_mgmt_query.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_verify_key_mic 38-39
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_verify_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 38 --end-line-number 39 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_verify_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211w_kde_add 63-63
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.ieee80211w_kde_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 63 --end-line-number 63 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.ieee80211w_kde_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_mic_failure_report 75-81
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_mic_failure_report.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 75 --end-line-number 81 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_mic_failure_report.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_psk_failure_report 84-89
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_psk_failure_report.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 84 --end-line-number 89 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_psk_failure_report.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_set_eapol 92-98
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_set_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 92 --end-line-number 98 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_set_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_eapol 101-107
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 101 --end-line-number 107 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_psk 110-119
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 110 --end-line-number 119 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_msk 122-128
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_msk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 122 --end-line-number 128 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_msk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_set_key 131-140
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_set_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 131 --end-line-number 140 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_set_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_seqnum 143-149
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_seqnum.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 143 --end-line-number 149 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_get_seqnum.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_send_eapol 152-160
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 152 --end-line-number 160 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_for_each_sta 174-181
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_for_each_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 174 --end-line-number 181 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_for_each_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_for_each_auth 184-191
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_for_each_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 184 --end-line-number 191 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_for_each_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_logger 194-200
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_logger.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 194 --end-line-number 200 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_logger.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_vlogger 203-225
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_vlogger.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 203 --end-line-number 225 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_vlogger.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sta_disconnect 228-236
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_sta_disconnect.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 228 --end-line-number 236 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_sta_disconnect.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_use_aes_cmac 239-253
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_use_aes_cmac.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 239 --end-line-number 253 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_use_aes_cmac.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_init 417-489
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 417 --end-line-number 489 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_deinit 511-541
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 511 --end-line-number 541 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sta_associated 601-646
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sta_associated.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 601 --end-line-number 646 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sta_associated.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_free_sta_sm 661-688
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_free_sta_sm.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 661 --end-line-number 688 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_free_sta_sm.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sta_deinit 691-720
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sta_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 691 --end-line-number 720 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sta_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_try_alt_snonce 845-893
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_try_alt_snonce.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 845 --end-line-number 893 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_try_alt_snonce.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_receive 896-1360
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 896 --end-line-number 1360 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		__wpa_send_eapol 1409-1631
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.__wpa_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1409 --end-line-number 1631 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.__wpa_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_send_eapol 1634-1662
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_send_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1634 --end-line-number 1662 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_send_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_remove_ptk 1694-1704
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_remove_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1694 --end-line-number 1704 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_remove_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_sm_event 1707-1819
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sm_event.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1707 --end-line-number 1819 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_sm_event.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_ptk 2088-2100
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_derive_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2088 --end-line-number 2100 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_derive_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_get_mib 3744-3830
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_get_mib.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3744 --end-line-number 3830 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_get_mib.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_pmksa_add 3953-3975
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_pmksa_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3953 --end-line-number 3975 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_pmksa_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_pmksa_add2 4013-4026
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_pmksa_add2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4013 --end-line-number 4026 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_pmksa_add2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_pmksa_get 4113-4120
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_pmksa_get.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4113 --end-line-number 4120 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth.c.wpa_auth_pmksa_get.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ft.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ft.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ft.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ft.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ft_finish_pull 37-37
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.ft_finish_pull.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 37 --end-line-number 37 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.ft_finish_pull.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_get_tlv 119-153
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_get_tlv.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 119 --end-line-number 153 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_get_tlv.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_send 405-413
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 405 --end-line-number 413 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_oui_send 416-426
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_oui_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 416 --end-line-number 426 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_oui_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_action_send 429-436
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_action_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 429 --end-line-number 436 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_action_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_get_psk 439-447
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 439 --end-line-number 447 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_add_sta 450-456
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_add_sta.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 450 --end-line-number 456 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_add_sta.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_add_tspec 459-469
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_add_tspec.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 459 --end-line-number 469 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_add_tspec.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_seq_free 561-568
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_seq_free.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 561 --end-line-number 568 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_seq_free.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_store_pmk_r0 895-917
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 895 --end-line-number 917 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_store_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_fetch_pmk_r0 920-941
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 920 --end-line-number 941 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_fetch_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_init_r0kh_seq 994-1008
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_init_r0kh_seq.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 994 --end-line-number 1008 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_init_r0kh_seq.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_pull_pmk_r1 1399-1512
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pull_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1399 --end-line-number 1512 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_pull_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_derive_ptk_ft 1515-1558
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_derive_ptk_ft.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1515 --end-line-number 1558 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_derive_ptk_ft.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_get_seqnum 1561-1567
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_get_seqnum.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1561 --end-line-number 1567 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_get_seqnum.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_set_key 1914-1923
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_set_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1914 --end-line-number 1923 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_auth_set_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_psk_pmk_r1 1956-2001
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_psk_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1956 --end-line-number 2001 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_psk_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_process_auth_req 2044-2189
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_process_auth_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2044 --end-line-number 2189 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_process_auth_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_process_auth 2192-2232
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_process_auth.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2192 --end-line-number 2232 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_process_auth.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_validate_reassoc 2235-2385
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_validate_reassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2235 --end-line-number 2385 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_validate_reassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_action_rx 2388-2461
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_action_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2388 --end-line-number 2461 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_action_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_request 2476-2511
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2476 --end-line-number 2511 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_request.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_build_r0 2564-2603
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2564 --end-line-number 2603 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_build_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_pull 2606-2747
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_pull.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2606 --end-line-number 2747 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_pull.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_r1 2754-2873
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2754 --end-line-number 2873 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ft_get_sta_cb 2915-2929
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.ft_get_sta_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2915 --end-line-number 2929 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.ft_get_sta_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_resp 2932-2983
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2932 --end-line-number 2983 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_push 2986-3001
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_push.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2986 --end-line-number 3001 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_push.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_seq 3004-3119
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3004 --end-line-number 3119 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_seq_req 3122-3184
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3122 --end-line-number 3184 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx_seq_resp 3187-3285
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3187 --end-line-number 3285 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx_seq_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_rx 3288-3403
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3288 --end-line-number 3403 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_rrb_oui_rx 3406-3470
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_oui_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3406 --end-line-number 3470 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_rrb_oui_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_generate_pmk_r1 3473-3515
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_generate_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3473 --end-line-number 3515 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_generate_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_push_pmk_r1 3518-3550
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_push_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3518 --end-line-number 3550 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ft.c.wpa_ft_push_pmk_r1.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_glue.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_glue.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_glue.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_glue.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_conf 34-125
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_conf.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 34 --end-line-number 125 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_conf.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_get_psk 239-285
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_get_psk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 239 --end-line-number 285 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_get_psk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_ft_rrb_rx_later 434-449
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_ft_rrb_rx_later.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 434 --end-line-number 449 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_ft_rrb_rx_later.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_ft_iter 460-508
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_ft_iter.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 460 --end-line-number 508 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_ft_iter.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_auth_send_ether 513-570
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_send_ether.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 513 --end-line-number 570 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_auth_send_ether.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_oui_deliver_later 608-626
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_oui_deliver_later.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 608 --end-line-number 626 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_oui_deliver_later.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_rrb_oui_receive 801-814
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_rrb_oui_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 801 --end-line-number 814 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_rrb_oui_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_wpa_register_ft_oui 826-860
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_register_ft_oui.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 826 --end-line-number 860 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_wpa_register_ft_oui.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_setup_wpa 879-964
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_setup_wpa.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 879 --end-line-number 964 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_setup_wpa.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_deinit_wpa 975-1007
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_deinit_wpa.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 975 --end-line-number 1007 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_glue.c.hostapd_deinit_wpa.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ie.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ie.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ie.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wpa_auth_ie.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_write_rsn_ie 91-362
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_write_rsn_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 91 --end-line-number 362 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_write_rsn_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_auth_gen_wpa_ie 414-473
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_auth_gen_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 414 --end-line-number 473 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_auth_gen_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_validate_wpa_ie 512-840
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_validate_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 512 --end-line-number 840 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_validate_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_parse_kde_ies 991-1038
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_parse_kde_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 991 --end-line-number 1038 /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wpa_auth_ie.c.wpa_parse_kde_ies.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wps_hostapd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wps_hostapd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wps_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wps_hostapd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/ap/wps_hostapd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wps_hostapd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/ap/wps_hostapd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/cli.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/cli.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/cli.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/cli.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/common/cli.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/cli.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/cli.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/common/cli.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/common_module_tests.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/common_module_tests.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/dpp.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/dpp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/dpp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/dpp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/common/dpp.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/dpp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/dpp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/common/dpp.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_build_comeback_resp 78-85
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas.c.gas_build_comeback_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 78 --end-line-number 85 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas.c.gas_build_comeback_resp.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		gas_build_comeback_resp 78-85
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas.c.gas_build_comeback_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 78 --end-line-number 85 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas.c.gas_build_comeback_resp.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas_server.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas_server.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas_server.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas_server.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/common/gas_server.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas_server.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas_server.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/common/gas_server.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/hw_features_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/hw_features_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/hw_features_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_set_freq_params 352-455
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/hw_features_common.c.hostapd_set_freq_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 352 --end-line-number 455 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/hw_features_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/hw_features_common.c.hostapd_set_freq_params.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		hostapd_set_freq_params 352-457
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c.hostapd_set_freq_params.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 352 --end-line-number 457 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c.hostapd_set_freq_params.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		set_disable_ht40 460-471
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c.set_disable_ht40.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 460 --end-line-number 471 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/hw_features_common.c.set_disable_ht40.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_parse_elems 190-400
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.ieee802_11_parse_elems.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 190 --end-line-number 400 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.ieee802_11_parse_elems.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211_freq_to_channel_ext 601-744
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.ieee80211_freq_to_channel_ext.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 601 --end-line-number 744 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.ieee80211_freq_to_channel_ext.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211_chan_to_freq_global 934-993
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.ieee80211_chan_to_freq_global.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 934 --end-line-number 993 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.ieee80211_chan_to_freq_global.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mbo_add_ie 1298-1319
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.mbo_add_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1298 --end-line-number 1319 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/ieee802_11_common.c.mbo_add_ie.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_parse_extension 182-269
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee802_11_parse_extension.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 182 --end-line-number 269 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee802_11_parse_extension.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee802_11_parse_elems 280-519
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee802_11_parse_elems.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 280 --end-line-number 519 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee802_11_parse_elems.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211_freq_to_channel_ext 720-882
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee80211_freq_to_channel_ext.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 720 --end-line-number 882 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee80211_freq_to_channel_ext.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ieee80211_chan_to_freq_global 1072-1131
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee80211_chan_to_freq_global.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1072 --end-line-number 1131 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.ieee80211_chan_to_freq_global.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		mbo_add_ie 1436-1457
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.mbo_add_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1436 --end-line-number 1457 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/ieee802_11_common.c.mbo_add_ie.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_kck_len 23-28
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_kck_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 23 --end-line-number 28 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_kck_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_kek_len 31-36
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_kek_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 31 --end-line-number 36 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_kek_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_mic_len 39-44
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_mic_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 39 --end-line-number 44 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_mic_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_eapol_key_mic 67-115
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_eapol_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 67 --end-line-number 115 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_eapol_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_pmk_to_ptk 141-205
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_pmk_to_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 141 --end-line-number 205 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_pmk_to_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_parse_ies 342-451
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_ft_parse_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 342 --end-line-number 451 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_ft_parse_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rsn_key_mgmt_to_bitfield 485-516
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.rsn_key_mgmt_to_bitfield.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 485 --end-line-number 516 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.rsn_key_mgmt_to_bitfield.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_pmk_r0 852-899
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_derive_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 852 --end-line-number 899 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_derive_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_pmk_r1_name 907-929
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_derive_pmk_r1_name.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 907 --end-line-number 929 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_derive_pmk_r1_name.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_pmk_r1 937-954
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_derive_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 937 --end-line-number 954 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_derive_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_pmk_r1_to_ptk 962-1027
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_pmk_r1_to_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 962 --end-line-number 1027 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_pmk_r1_to_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_key_mgmt_txt 1172-1216
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_key_mgmt_txt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1172 --end-line-number 1216 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_key_mgmt_txt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_akm_to_suite 1219-1244
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_akm_to_suite.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1219 --end-line-number 1244 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_akm_to_suite.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_cipher_to_alg 1422-1445
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_cipher_to_alg.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1422 --end-line-number 1445 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_cipher_to_alg.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_select_ap_group_cipher 1684-1705
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_select_ap_group_cipher.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1684 --end-line-number 1705 /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_common.c.wpa_select_ap_group_cipher.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_kck_len 24-39
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_kck_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 24 --end-line-number 39 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_kck_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_kek_len 42-57
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_kek_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 42 --end-line-number 57 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_kek_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_mic_len 60-75
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_mic_len.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 60 --end-line-number 75 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_mic_len.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_eapol_key_mic 98-193
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_eapol_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 98 --end-line-number 193 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_eapol_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_pmk_to_ptk 219-315
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_pmk_to_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 219 --end-line-number 315 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_pmk_to_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_parse_ies 705-816
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_ft_parse_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 705 --end-line-number 816 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_ft_parse_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rsn_key_mgmt_to_bitfield 850-897
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.rsn_key_mgmt_to_bitfield.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 850 --end-line-number 897 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.rsn_key_mgmt_to_bitfield.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_pmk_r0 1233-1283
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_derive_pmk_r0.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1233 --end-line-number 1283 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_derive_pmk_r0.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_pmk_r1_name 1291-1315
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_derive_pmk_r1_name.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1291 --end-line-number 1315 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_derive_pmk_r1_name.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_derive_pmk_r1 1323-1343
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_derive_pmk_r1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1323 --end-line-number 1343 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_derive_pmk_r1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_pmk_r1_to_ptk 1351-1419
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_pmk_r1_to_ptk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1351 --end-line-number 1419 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_pmk_r1_to_ptk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_key_mgmt_txt 1564-1618
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_key_mgmt_txt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1564 --end-line-number 1618 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_key_mgmt_txt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_akm_to_suite 1621-1652
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_akm_to_suite.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1621 --end-line-number 1652 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_akm_to_suite.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_cipher_to_alg 1830-1853
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_cipher_to_alg.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1830 --end-line-number 1853 /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_common.c.wpa_cipher_to_alg.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_helpers.c /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_helpers.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_helpers.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_helpers.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/common/wpa_helpers.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_helpers.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_helpers.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/common/wpa_helpers.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-ctr.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-ctr.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-ctr.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-ctr.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_128_ctr_encrypt 24-55
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-ctr.c.aes_128_ctr_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 24 --end-line-number 55 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-ctr.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-ctr.c.aes_128_ctr_encrypt.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-ctr.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-ctr.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_ctr_encrypt 25-56
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-ctr.c.aes_ctr_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 25 --end-line-number 56 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-ctr.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-ctr.c.aes_ctr_encrypt.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-dec.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-dec.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-dec.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-dec.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_decrypt 150-154
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-dec.c.aes_decrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 150 --end-line-number 154 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-dec.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-dec.c.aes_decrypt.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-dec.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-dec.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_decrypt 151-156
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-dec.c.aes_decrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 151 --end-line-number 156 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-dec.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-dec.c.aes_decrypt.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-enc.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-enc.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-enc.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-enc.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_encrypt 115-119
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-enc.c.aes_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 115 --end-line-number 119 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-enc.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-internal-enc.c.aes_encrypt.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-enc.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-enc.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_encrypt 115-120
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-enc.c.aes_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 115 --end-line-number 120 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-enc.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-internal-enc.c.aes_encrypt.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_s2v 64-107
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.aes_s2v.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 64 --end-line-number 107 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.aes_s2v.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_siv_encrypt 110-144
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.aes_siv_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 110 --end-line-number 144 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.aes_siv_encrypt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_siv_decrypt 147-188
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.aes_siv_decrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 147 --end-line-number 188 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/aes-siv.c.aes_siv_decrypt.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_s2v 64-116
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.aes_s2v.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 64 --end-line-number 116 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.aes_s2v.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_siv_encrypt 119-159
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.aes_siv_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 119 --end-line-number 159 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.aes_siv_encrypt.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		aes_siv_decrypt 162-208
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.aes_siv_decrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 162 --end-line-number 208 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/aes-siv.c.aes_siv_decrypt.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_gnutls.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_gnutls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_gnutls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_gnutls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_gnutls.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_gnutls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_gnutls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_gnutls.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_libtomcrypt.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_libtomcrypt.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_libtomcrypt.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_libtomcrypt.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_libtomcrypt.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_libtomcrypt.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_libtomcrypt.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_libtomcrypt.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_linux.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_linux.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_linux.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_linux.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_linux.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_linux.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_linux.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_linux.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_module_tests.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_module_tests.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_none.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_none.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_none.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_none.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_none.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_none.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_none.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_none.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/des-internal.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/des-internal.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/des-internal.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/des-internal.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		des_encrypt 399-424
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/des-internal.c.des_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 399 --end-line-number 424 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/des-internal.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/des-internal.c.des_encrypt.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/des-internal.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/des-internal.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		des_encrypt 399-425
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/des-internal.c.des_encrypt.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 399 --end-line-number 425 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/des-internal.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/des-internal.c.des_encrypt.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		challenge_response 144-154
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.challenge_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 144 --end-line-number 154 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.challenge_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		generate_nt_response 168-182
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.generate_nt_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 168 --end-line-number 182 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.generate_nt_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		generate_nt_response_pwhash 195-209
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.generate_nt_response_pwhash.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 195 --end-line-number 209 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.generate_nt_response_pwhash.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		nt_challenge_response 303-311
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.nt_challenge_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 303 --end-line-number 311 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.nt_challenge_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		nt_password_hash_encrypted_with_block 491-496
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.nt_password_hash_encrypted_with_block.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 491 --end-line-number 496 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.nt_password_hash_encrypted_with_block.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		old_nt_password_hash_encrypted_with_new_nt_password_hash 508-524
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.old_nt_password_hash_encrypted_with_new_nt_password_hash.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 508 --end-line-number 524 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/ms_funcs.c.old_nt_password_hash_encrypted_with_new_nt_password_hash.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		challenge_response 145-157
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.challenge_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 145 --end-line-number 157 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.challenge_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		generate_nt_response 171-185
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.generate_nt_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 171 --end-line-number 185 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.generate_nt_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		generate_nt_response_pwhash 198-212
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.generate_nt_response_pwhash.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 198 --end-line-number 212 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.generate_nt_response_pwhash.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		nt_challenge_response 306-315
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.nt_challenge_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 306 --end-line-number 315 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.nt_challenge_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		nt_password_hash_encrypted_with_block 496-503
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.nt_password_hash_encrypted_with_block.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 496 --end-line-number 503 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.nt_password_hash_encrypted_with_block.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		old_nt_password_hash_encrypted_with_new_nt_password_hash 515-531
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.old_nt_password_hash_encrypted_with_new_nt_password_hash.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 515 --end-line-number 531 /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/ms_funcs.c.old_nt_password_hash_encrypted_with_new_nt_password_hash.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha256-kdf.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha256-kdf.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha256-kdf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha256-kdf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha256-kdf.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha256-kdf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha256-kdf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha256-kdf.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-kdf.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-kdf.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-kdf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-kdf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-kdf.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-kdf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-kdf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-kdf.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-prf.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-prf.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-prf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-prf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384-prf.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-prf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-prf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384-prf.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha384.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha384.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-kdf.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-kdf.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-kdf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-kdf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-kdf.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-kdf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-kdf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-kdf.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-prf.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-prf.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-prf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-prf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/sha512-prf.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-prf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-prf.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/sha512-prf.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/tls_openssl.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/tls_openssl.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/tls_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/tls_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/tls_openssl.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/tls_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/tls_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/tls_openssl.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_atheros.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_atheros.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_atheros.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_atheros.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_atheros.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_atheros.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_atheros.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_atheros.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_common.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_common.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_hostap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_hostap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_hostap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_hostap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_hostap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_hostap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_hostap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_hostap.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_linux.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_linux.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_linux.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_linux.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_linux.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_linux.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_linux.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_linux.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_qca.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_qca.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_qca.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_qca.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_macsec_qca.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_qca.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_qca.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_macsec_qca.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_ndis.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_ndis.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_ndis.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_ndis.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_ndis.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_ndis.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_ndis.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_ndis.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_capa.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_capa.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_capa.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_capa.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_capa.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_capa.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_capa.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_capa.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_event.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_event.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_event.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_event.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_event.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_event.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_event.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_event.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_scan.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_scan.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_scan.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_scan.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_nl80211_scan.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_scan.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_scan.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_nl80211_scan.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_privsep.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_privsep.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_privsep.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_privsep.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_privsep.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_privsep.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_privsep.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_privsep.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_roboswitch.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_roboswitch.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_roboswitch.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_roboswitch.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_roboswitch.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_roboswitch.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_roboswitch.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_roboswitch.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wext.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wext.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wext.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wext.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wext.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wext.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wext.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wext.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/driver_wired_common.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired_common.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/driver_wired_common.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/drivers.c /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/drivers.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/drivers.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/drivers.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/drivers/drivers.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/drivers.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/drivers.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/drivers/drivers.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_sim_verify_mac 165-202
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c.eap_sim_verify_mac.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 165 --end-line-number 202 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c.eap_sim_verify_mac.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_sim_parse_encr 935-967
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c.eap_sim_parse_encr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 935 --end-line-number 967 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_common/eap_sim_common.c.eap_sim_parse_encr.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_sim_verify_mac 165-201
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c.eap_sim_verify_mac.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 165 --end-line-number 201 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c.eap_sim_verify_mac.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_sim_parse_encr 933-964
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c.eap_sim_parse_encr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 933 --end-line-number 964 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_common/eap_sim_common.c.eap_sim_parse_encr.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_allowed_method 130-146
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_allowed_method.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 130 --end-line-number 146 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_allowed_method.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_erp_init 486-570
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_peer_erp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 486 --end-line-number 570 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_peer_erp_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_initiate 1529-1577
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_peer_initiate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1529 --end-line-number 1577 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_peer_initiate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_finish 1580-1739
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_peer_finish.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1580 --end-line-number 1739 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_peer_finish.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_sm_request 2184-2245
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_sm_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2184 --end-line-number 2245 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap.c.eap_sm_request.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_config_allowed_method 131-148
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_config_allowed_method.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 131 --end-line-number 148 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_config_allowed_method.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_allowed_method 158-162
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_allowed_method.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 158 --end-line-number 162 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_allowed_method.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_erp_init 662-772
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_peer_erp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 662 --end-line-number 772 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_peer_erp_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_initiate 1714-1762
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_peer_initiate.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1714 --end-line-number 1762 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_peer_initiate.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_peer_finish 1765-1923
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_peer_finish.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1765 --end-line-number 1923 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_peer_finish.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_sm_request 2368-2430
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_sm_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2368 --end-line-number 2430 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap.c.eap_sm_request.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_aka.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_aka.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_aka.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_aka.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_aka.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_aka.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_aka.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_aka.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_eke.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_eke.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_eke.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_eke.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_eke.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_eke.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_eke.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_eke.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast_pac.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast_pac.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast_pac.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast_pac.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_fast_pac.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast_pac.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast_pac.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_fast_pac.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_gpsk.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_gpsk.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_gpsk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_gpsk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_gpsk.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_gpsk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_gpsk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_gpsk.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ikev2.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ikev2.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ikev2.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ikev2.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_leap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_leap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_leap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_leap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_leap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_leap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_leap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_leap.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_mschapv2.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_mschapv2.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_mschapv2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_mschapv2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_mschapv2.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_mschapv2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_mschapv2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_mschapv2.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pax.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pax.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pax.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pax.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pax.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pax.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pax.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pax.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_peap.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_peap.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_peap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_peap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_peap.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_peap.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_peap.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_peap.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_proxy_dummy.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_proxy_dummy.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_proxy_dummy.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_proxy_dummy.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_proxy_dummy.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_proxy_dummy.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_proxy_dummy.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_proxy_dummy.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_psk.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_psk.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_psk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_psk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_psk.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_psk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_psk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_psk.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pwd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pwd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_pwd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_pwd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sake.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sake.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sake.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sake.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sake.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sake.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sake.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sake.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sim.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sim.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sim.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sim.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_sim.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sim.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sim.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_sim.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_tls.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_tls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_tls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_tls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_tls.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_tls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_tls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_tls.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ttls.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ttls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ttls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ttls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/eap_ttls.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ttls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ttls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/eap_ttls.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/ikev2.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/ikev2.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/ikev2.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/ikev2.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/tncc.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/tncc.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/tncc.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/tncc.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_peer/tncc.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/tncc.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/tncc.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_peer/tncc.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_server_erp_init 412-498
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c.eap_server_erp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 412 --end-line-number 498 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c.eap_server_erp_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_get_identity 1964-1968
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c.eap_get_identity.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1964 --end-line-number 1968 /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server.c.eap_get_identity.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_server_erp_init 412-500
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c.eap_server_erp_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 412 --end-line-number 500 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c.eap_server_erp_init.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eap_get_identity 1966-1970
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c.eap_get_identity.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1966 --end-line-number 1970 /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server.c.eap_get_identity.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_aka.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_aka.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_aka.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_aka.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_aka.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_aka.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_aka.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_aka.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_eke.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_eke.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_eke.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_eke.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_eke.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_eke.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_eke.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_eke.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_fast.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_fast.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_fast.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_fast.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_fast.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_fast.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_fast.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_fast.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gpsk.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gpsk.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gpsk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gpsk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gpsk.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gpsk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gpsk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gpsk.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gtc.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gtc.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gtc.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gtc.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_gtc.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gtc.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gtc.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_gtc.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ikev2.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ikev2.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ikev2.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ikev2.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_mschapv2.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_mschapv2.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_mschapv2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_mschapv2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_mschapv2.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_mschapv2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_mschapv2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_mschapv2.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pax.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pax.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pax.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pax.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pax.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pax.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pax.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pax.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_psk.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_psk.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_psk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_psk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_psk.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_psk.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_psk.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_psk.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pwd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pwd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_pwd.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pwd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pwd.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_pwd.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sake.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sake.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sake.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sake.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sake.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sake.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sake.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sake.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sim.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sim.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sim.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sim.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_sim.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sim.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sim.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_sim.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ttls.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ttls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ttls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ttls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/eap_server_ttls.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ttls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ttls.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/eap_server_ttls.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/ikev2.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/ikev2.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/ikev2.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/ikev2.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/ikev2.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/ikev2.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/tncs.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/tncs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/tncs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/tncs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/eap_server/tncs.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/tncs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/tncs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/eap_server/tncs.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_auth/eapol_auth_sm.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_auth/eapol_auth_sm.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_auth/eapol_auth_sm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_auth/eapol_auth_sm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_auth_conf_clone 1183-1258
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_auth/eapol_auth_sm.c.eapol_auth_conf_clone.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1183 --end-line-number 1258 /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_auth/eapol_auth_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_auth/eapol_auth_sm.c.eapol_auth_conf_clone.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_auth/eapol_auth_sm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_auth/eapol_auth_sm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_auth_conf_clone 1183-1255
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_auth/eapol_auth_sm.c.eapol_auth_conf_clone.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1183 --end-line-number 1255 /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_auth/eapol_auth_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_auth/eapol_auth_sm.c.eapol_auth_conf_clone.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_sm_abortSupp 891-900
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.eapol_sm_abortSupp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 891 --end-line-number 900 /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.eapol_sm_abortSupp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_sm_get_eap_proxy_imsi 2144-2153
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.eapol_sm_get_eap_proxy_imsi.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2144 --end-line-number 2153 /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.eapol_sm_get_eap_proxy_imsi.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_sm_erp_flush 2156-2160
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.eapol_sm_erp_flush.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2156 --end-line-number 2160 /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/eapol_supp/eapol_supp_sm.c.eapol_sm_erp_flush.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_sm_abortSupp 905-917
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c.eapol_sm_abortSupp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 905 --end-line-number 917 /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c.eapol_sm_abortSupp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		eapol_sm_erp_flush 2188-2192
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c.eapol_sm_erp_flush.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2188 --end-line-number 2192 /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/eapol_supp/eapol_supp_sm.c.eapol_sm_erp_flush.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_group.c /hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_group.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_group.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_group.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_group.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_group.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_group.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_group.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_session.c /hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_session.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_session.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_session.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/fst/fst_session.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_session.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_session.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/fst/fst_session.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		l2_packet_send 95-122
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c.l2_packet_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 95 --end-line-number 122 /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c.l2_packet_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		l2_packet_set_packet_filter 456-481
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c.l2_packet_set_packet_filter.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 456 --end-line-number 481 /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/l2_packet/l2_packet_linux.c.l2_packet_set_packet_filter.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		l2_packet_send 95-125
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c.l2_packet_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 95 --end-line-number 125 /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c.l2_packet_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		l2_packet_set_packet_filter 459-487
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c.l2_packet_set_packet_filter.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 459 --end-line-number 487 /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/l2_packet/l2_packet_linux.c.l2_packet_set_packet_filter.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_add_device 706-899
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_add_device.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 706 --end-line-number 899 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_add_device.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_search 992-1021
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_search.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 992 --end-line-number 1021 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_search.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_find 1152-1283
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_find.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1152 --end-line-number 1283 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_find.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_go_complete 1782-1843
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_go_complete.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1782 --end-line-number 1843 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_go_complete.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_reply_probe 2263-2467
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_reply_probe.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2263 --end-line-number 2467 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_reply_probe.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_probe_req_rx 2470-2516
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_probe_req_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2470 --end-line-number 2516 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_probe_req_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_service_flush_asp 2791-2807
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_service_flush_asp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2791 --end-line-number 2807 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_service_flush_asp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_deinit 2953-2989
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2953 --end-line-number 2989 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_flush 2992-3007
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_flush.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2992 --end-line-number 3007 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_flush.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_set_pref_chan 4782-4801
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_set_pref_chan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4782 --end-line-number 4801 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_set_pref_chan.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_set_own_pref_freq_list 5478-5492
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_set_own_pref_freq_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 5478 --end-line-number 5492 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p.c.p2p_set_own_pref_freq_list.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_add_device 706-907
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_add_device.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 706 --end-line-number 907 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_add_device.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_search 1000-1037
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_search.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1000 --end-line-number 1037 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_search.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_find 1168-1306
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_find.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1168 --end-line-number 1306 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_find.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_go_complete 1805-1867
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_go_complete.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1805 --end-line-number 1867 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_go_complete.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_build_probe_resp_buf 2261-2312
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_build_probe_resp_buf.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2261 --end-line-number 2312 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_build_probe_resp_buf.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_reply_probe 2339-2504
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_reply_probe.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2339 --end-line-number 2504 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_reply_probe.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_probe_req_rx 2507-2559
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_probe_req_rx.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2507 --end-line-number 2559 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_probe_req_rx.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_service_flush_asp 2834-2851
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_service_flush_asp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2834 --end-line-number 2851 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_service_flush_asp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_deinit 2997-3033
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2997 --end-line-number 3033 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_flush 3036-3055
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_flush.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3036 --end-line-number 3055 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_flush.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_set_pref_chan 4830-4848
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_set_pref_chan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4830 --end-line-number 4848 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_set_pref_chan.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_set_wfd_r2_dev_info 5161-5172
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_set_wfd_r2_dev_info.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 5161 --end-line-number 5172 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_set_wfd_r2_dev_info.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_set_own_pref_freq_list 5539-5553
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_set_own_pref_freq_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 5539 --end-line-number 5553 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p.c.p2p_set_own_pref_freq_list.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_build_go_neg_resp 271-364
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_build_go_neg_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 271 --end-line-number 364 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_build_go_neg_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_check_pref_chan_no_recv 548-608
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_no_recv.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 548 --end-line-number 608 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_no_recv.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_check_pref_chan_recv 611-673
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_recv.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 611 --end-line-number 673 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_recv.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_check_pref_chan 676-734
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_check_pref_chan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 676 --end-line-number 734 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_go_neg.c.p2p_check_pref_chan.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_build_go_neg_resp 271-369
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_build_go_neg_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 271 --end-line-number 369 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_build_go_neg_resp.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_check_pref_chan_no_recv 553-597
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_no_recv.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 553 --end-line-number 597 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_no_recv.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_check_pref_chan_recv 600-640
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_recv.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 600 --end-line-number 640 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_check_pref_chan_recv.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_check_pref_chan 643-730
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_check_pref_chan.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 643 --end-line-number 730 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_go_neg.c.p2p_check_pref_chan.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wifi_display_build_go_ie 353-401
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c.wifi_display_build_go_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 353 --end-line-number 401 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c.wifi_display_build_go_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_group_get_common_freqs 1091-1128
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c.p2p_group_get_common_freqs.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1091 --end-line-number 1128 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_group.c.p2p_group_get_common_freqs.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wifi_display_build_go_ie 353-403
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c.wifi_display_build_go_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 353 --end-line-number 403 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c.wifi_display_build_go_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_group_get_common_freqs 1093-1130
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c.p2p_group_get_common_freqs.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1093 --end-line-number 1130 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_group.c.p2p_group_get_common_freqs.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_process_prov_disc_req 554-1190
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c.p2p_process_prov_disc_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 554 --end-line-number 1190 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c.p2p_process_prov_disc_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_process_prov_disc_resp 1292-1587
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c.p2p_process_prov_disc_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1292 --end-line-number 1587 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_pd.c.p2p_process_prov_disc_resp.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_process_prov_disc_req 554-1193
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c.p2p_process_prov_disc_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 554 --end-line-number 1193 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c.p2p_process_prov_disc_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_process_prov_disc_resp 1295-1590
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c.p2p_process_prov_disc_resp.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1295 --end-line-number 1590 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_pd.c.p2p_process_prov_disc_resp.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_sd_response 424-477
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c.p2p_sd_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 424 --end-line-number 477 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c.p2p_sd_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_rx_gas_comeback_req 619-687
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c.p2p_rx_gas_comeback_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 619 --end-line-number 687 /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/p2p/p2p_sd.c.p2p_rx_gas_comeback_req.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_sd_response 424-479
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c.p2p_sd_response.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 424 --end-line-number 479 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c.p2p_sd_response.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		p2p_rx_gas_comeback_req 621-691
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c.p2p_rx_gas_comeback_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 621 --end-line-number 691 /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/p2p/p2p_sd.c.p2p_rx_gas_comeback_req.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_cp.c /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_cp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_cp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_cp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_cp.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_cp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_cp.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_cp.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_kay.c /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_kay.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_kay.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_kay.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_kay.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_kay.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_kay.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_kay.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_secy_ops.c /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_secy_ops.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_secy_ops.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_secy_ops.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/pae/ieee802_1x_secy_ops.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_secy_ops.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_secy_ops.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/pae/ieee802_1x_secy_ops.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_verify_das_req 540-597
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_verify_das_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 540 --end-line-number 597 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_verify_das_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_add_attr 623-653
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_add_attr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 623 --end-line-number 653 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_add_attr.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_get_vendor_attr 913-969
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_get_vendor_attr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 913 --end-line-number 969 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_get_vendor_attr.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		decrypt_ms_key 972-1048
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.decrypt_ms_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 972 --end-line-number 1048 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.decrypt_ms_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_get_tunnel_password 1547-1651
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_get_tunnel_password.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1547 --end-line-number 1651 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_msg_get_tunnel_password.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_copy_class 1667-1692
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_copy_class.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1667 --end-line-number 1692 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius.c.radius_copy_class.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_verify_das_req 540-602
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_verify_das_req.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 540 --end-line-number 602 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_verify_das_req.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_add_attr 628-661
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_add_attr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 628 --end-line-number 661 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_add_attr.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_get_vendor_attr 921-976
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_get_vendor_attr.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 921 --end-line-number 976 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_get_vendor_attr.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		decrypt_ms_key 979-1054
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.decrypt_ms_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 979 --end-line-number 1054 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.decrypt_ms_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_msg_get_tunnel_password 1553-1656
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_get_tunnel_password.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1553 --end-line-number 1656 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_msg_get_tunnel_password.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_copy_class 1672-1696
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_copy_class.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1672 --end-line-number 1696 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius.c.radius_copy_class.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_client.c /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_client.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_client.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_client.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_client_get_mib 1636-1665
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_client.c.radius_client_get_mib.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1636 --end-line-number 1665 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_client.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_client.c.radius_client_get_mib.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_client.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_client.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_client_get_mib 1636-1670
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_client.c.radius_client_get_mib.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1636 --end-line-number 1670 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_client.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_client.c.radius_client_get_mib.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_das_receive 186-323
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c.radius_das_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 186 --end-line-number 323 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c.radius_das_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_das_init 350-395
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c.radius_das_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 350 --end-line-number 395 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_das.c.radius_das_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_das_receive 187-326
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c.radius_das_receive.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 187 --end-line-number 326 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c.radius_das_receive.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_das_init 353-399
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c.radius_das_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 353 --end-line-number 399 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_das.c.radius_das_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_server_get_new_session 619-710
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c.radius_server_get_new_session.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 619 --end-line-number 710 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c.radius_server_get_new_session.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_server_request 988-1181
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c.radius_server_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 988 --end-line-number 1181 /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/radius/radius_server.c.radius_server_request.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_server_get_new_session 624-715
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c.radius_server_get_new_session.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 624 --end-line-number 715 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c.radius_server_get_new_session.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		radius_server_request 993-1186
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c.radius_server_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 993 --end-line-number 1186 /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/radius/radius_server.c.radius_server_request.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_smk_error 62-121
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_error.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 62 --end-line-number 121 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_error.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_smk_m3 124-175
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_m3.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 124 --end-line-number 175 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_m3.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_smk_m2 178-281
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 178 --end-line-number 281 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_stk_1_of_4 322-376
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_1_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 322 --end-line-number 376 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_1_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_stk_3_of_4 379-432
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_3_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 379 --end-line-number 432 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_3_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_smk_m45 513-589
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m45.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 513 --end-line-number 589 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m45.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_smk_error 592-651
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_error.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 592 --end-line-number 651 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_error.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_stk_1_of_4 654-727
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_1_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 654 --end-line-number 727 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_1_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_stk_3_of_4 805-878
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_3_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 805 --end-line-number 878 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_3_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		peerkey_verify_eapol_key_mic 912-969
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.peerkey_verify_eapol_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 912 --end-line-number 969 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.peerkey_verify_eapol_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_stkstart 981-1094
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_sm_stkstart.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 981 --end-line-number 1094 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.wpa_sm_stkstart.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		peerkey_rx_eapol_smk 1137-1153
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.peerkey_rx_eapol_smk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1137 --end-line-number 1153 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/peerkey.c.peerkey_rx_eapol_smk.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_smk_error 62-120
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_error.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 62 --end-line-number 120 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_error.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_smk_m3 123-173
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_m3.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 123 --end-line-number 173 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_smk_m3.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_smk_m2 176-279
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 176 --end-line-number 279 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_stk_1_of_4 320-375
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_1_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 320 --end-line-number 375 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_1_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_stk_3_of_4 378-431
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_3_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 378 --end-line-number 431 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_send_stk_3_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_smk_m45 512-588
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m45.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 512 --end-line-number 588 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_m45.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_smk_error 591-649
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_error.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 591 --end-line-number 649 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_smk_error.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_stk_1_of_4 652-726
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_1_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 652 --end-line-number 726 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_1_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_stk_3_of_4 804-883
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_3_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 804 --end-line-number 883 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_supplicant_process_stk_3_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		peerkey_verify_eapol_key_mic 917-975
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.peerkey_verify_eapol_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 917 --end-line-number 975 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.peerkey_verify_eapol_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_stkstart 987-1103
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_sm_stkstart.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 987 --end-line-number 1103 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.wpa_sm_stkstart.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		peerkey_rx_eapol_smk 1146-1164
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.peerkey_rx_eapol_smk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1146 --end-line-number 1164 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/peerkey.c.peerkey_rx_eapol_smk.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_free_entry 42-50
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_free_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 42 --end-line-number 50 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_free_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_add 126-251
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 126 --end-line-number 251 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_clone_entry 342-361
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_clone_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 342 --end-line-number 361 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_clone_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_set_current 434-466
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_set_current.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 434 --end-line-number 466 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_set_current.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_list 479-513
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 479 --end-line-number 513 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/pmksa_cache.c.pmksa_cache_list.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_free_entry 42-53
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_free_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 42 --end-line-number 53 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_free_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_add 130-172
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_add.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 130 --end-line-number 172 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_add.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_add_entry 175-273
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_add_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 175 --end-line-number 273 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_add_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_clone_entry 364-385
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_clone_entry.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 364 --end-line-number 385 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_clone_entry.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_get_fils_cache_id 424-439
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_get_fils_cache_id.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 424 --end-line-number 439 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_get_fils_cache_id.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_set_current 477-517
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_set_current.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 477 --end-line-number 517 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_set_current.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		pmksa_cache_list 530-585
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_list.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 530 --end-line-number 585 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/pmksa_cache.c.pmksa_cache_list.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rsn_preauth_eapol_cb 73-116
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c.rsn_preauth_eapol_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 73 --end-line-number 116 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c.rsn_preauth_eapol_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rsn_preauth_candidate_process 300-353
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c.rsn_preauth_candidate_process.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 300 --end-line-number 353 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/preauth.c.rsn_preauth_candidate_process.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rsn_preauth_eapol_cb 73-116
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c.rsn_preauth_eapol_cb.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 73 --end-line-number 116 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c.rsn_preauth_eapol_cb.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		rsn_preauth_candidate_process 300-354
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c.rsn_preauth_candidate_process.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 300 --end-line-number 354 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/preauth.c.rsn_preauth_candidate_process.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_tpk_send 233-299
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_tpk_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 233 --end-line-number 299 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_tpk_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_send_tpk_m1 1046-1222
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_send_tpk_m1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1046 --end-line-number 1222 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_send_tpk_m1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_prohibited 2878-2882
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_prohibited.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2878 --end-line-number 2882 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_prohibited.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_chan_switch_prohibited 2885-2889
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_chan_switch_prohibited.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2885 --end-line-number 2889 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_chan_switch_prohibited.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_ap_ies 2892-2911
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_ap_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2892 --end-line-number 2911 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_ap_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_assoc_resp_ies 2914-2935
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_assoc_resp_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2914 --end-line-number 2935 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/tdls.c.wpa_tdls_assoc_resp_ies.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_tpk_send 233-298
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_tpk_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 233 --end-line-number 298 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_tpk_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_send_tpk_m1 1045-1222
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_send_tpk_m1.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1045 --end-line-number 1222 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_send_tpk_m1.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_prohibited 2878-2882
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_prohibited.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2878 --end-line-number 2882 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_prohibited.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_chan_switch_prohibited 2885-2889
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_chan_switch_prohibited.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2885 --end-line-number 2889 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_chan_switch_prohibited.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_ap_ies 2892-2911
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_ap_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2892 --end-line-number 2911 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_ap_ies.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_tdls_assoc_resp_ies 2914-2935
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_assoc_resp_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2914 --end-line-number 2935 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/tdls.c.wpa_tdls_assoc_resp_ies.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_eapol_key_send 43-83
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_eapol_key_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 43 --end-line-number 83 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_eapol_key_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_key_request 96-160
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_key_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 96 --end-line-number 160 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_key_request.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_get_pmk 181-321
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_get_pmk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 181 --end-line-number 321 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_get_pmk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_2_of_4 336-426
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 336 --end-line-number 426 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_key_neg_complete 559-600
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_key_neg_complete.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 559 --end-line-number 600 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_key_neg_complete.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_4_of_4 1143-1183
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_send_4_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1143 --end-line-number 1183 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_send_4_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_3_of_4 1186-1313
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_process_3_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1186 --end-line-number 1313 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_process_3_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_1_of_2_rsn 1316-1363
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2_rsn.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1316 --end-line-number 1363 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2_rsn.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_2_of_2 1453-1492
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1453 --end-line-number 1492 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_1_of_2 1495-1563
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1495 --end-line-number 1563 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_verify_eapol_key_mic 1566-1617
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_verify_eapol_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1566 --end-line-number 1617 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_verify_eapol_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_decrypt_key_data 1621-1690
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_decrypt_key_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1621 --end-line-number 1690 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_supplicant_decrypt_key_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_rx_eapol 1760-2067
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_rx_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1760 --end-line-number 2067 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_rx_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_deinit 2277-2297
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2277 --end-line-number 2297 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_notify_assoc 2308-2359
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_notify_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2308 --end-line-number 2359 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_notify_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_notify_disassoc 2369-2386
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_notify_disassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2369 --end-line-number 2386 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_notify_disassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_pmk 2399-2419
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_pmk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2399 --end-line-number 2419 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_pmk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_config 2480-2512
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_config.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2480 --end-line-number 2512 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_config.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_assoc_wpa_ie_default 2690-2732
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie_default.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2690 --end-line-number 2732 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie_default.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_assoc_wpa_ie 2746-2768
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2746 --end-line-number 2768 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_ap_wpa_ie 2781-2803
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_ap_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2781 --end-line-number 2803 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_ap_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_ap_rsn_ie 2816-2838
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_ap_rsn_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2816 --end-line-number 2838 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa.c.wpa_sm_set_ap_rsn_ie.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_eapol_key_send 47-163
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_eapol_key_send.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 47 --end-line-number 163 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_eapol_key_send.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_key_request 176-238
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_key_request.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 176 --end-line-number 238 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_key_request.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_get_pmk 259-407
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_get_pmk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 259 --end-line-number 407 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_get_pmk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_2_of_4 422-510
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 422 --end-line-number 510 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_key_neg_complete 643-686
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_key_neg_complete.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 643 --end-line-number 686 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_key_neg_complete.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_4_of_4 1229-1268
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_send_4_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1229 --end-line-number 1268 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_send_4_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_3_of_4 1271-1398
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_process_3_of_4.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1271 --end-line-number 1398 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_process_3_of_4.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_1_of_2_rsn 1401-1449
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2_rsn.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1401 --end-line-number 1449 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2_rsn.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_send_2_of_2 1539-1577
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1539 --end-line-number 1577 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_send_2_of_2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_process_1_of_2 1580-1648
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1580 --end-line-number 1648 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_process_1_of_2.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_verify_eapol_key_mic 1651-1702
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_verify_eapol_key_mic.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1651 --end-line-number 1702 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_verify_eapol_key_mic.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_supplicant_decrypt_key_data 1706-1784
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_decrypt_key_data.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1706 --end-line-number 1784 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_supplicant_decrypt_key_data.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_rx_eapol 1924-2242
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_rx_eapol.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1924 --end-line-number 2242 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_rx_eapol.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_deinit 2452-2481
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_deinit.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2452 --end-line-number 2481 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_deinit.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_notify_assoc 2492-2553
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_notify_assoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2492 --end-line-number 2553 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_notify_assoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_notify_disassoc 2563-2583
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_notify_disassoc.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2563 --end-line-number 2583 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_notify_disassoc.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_pmk 2596-2616
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_pmk.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2596 --end-line-number 2616 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_pmk.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_config 2677-2718
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_config.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2677 --end-line-number 2718 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_config.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_assoc_wpa_ie_default 2896-2941
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie_default.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2896 --end-line-number 2941 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie_default.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_assoc_wpa_ie 2955-2976
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2955 --end-line-number 2976 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_assoc_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_ap_wpa_ie 2989-3010
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_ap_wpa_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 2989 --end-line-number 3010 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_ap_wpa_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_set_ap_rsn_ie 3023-3044
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_ap_rsn_ie.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3023 --end-line-number 3044 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_set_ap_rsn_ie.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_sm_pmksa_cache_head 3078-3081
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_pmksa_cache_head.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 3078 --end-line-number 3081 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_sm_pmksa_cache_head.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_fils_is_completed 4145-4152
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_fils_is_completed.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 4145 --end-line-number 4152 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa.c.wpa_fils_is_completed.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ft.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ft.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ft.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ft.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_gen_req_ies 141-310
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ft.c.wpa_ft_gen_req_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 141 --end-line-number 310 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ft.c.wpa_ft_gen_req_ies.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ft.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ft.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_ft_gen_req_ies 141-316
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ft.c.wpa_ft_gen_req_ies.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 141 --end-line-number 316 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ft.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ft.c.wpa_ft_gen_req_ies.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ie.c /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ie.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ie.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ie.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_gen_wpa_ie_rsn 108-230
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ie.c.wpa_gen_wpa_ie_rsn.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 108 --end-line-number 230 /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ie.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/rsn_supp/wpa_ie.c.wpa_gen_wpa_ie_rsn.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ie.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ie.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpa_gen_wpa_ie_rsn 108-250
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ie.c.wpa_gen_wpa_ie_rsn.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 108 --end-line-number 250 /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ie.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/rsn_supp/wpa_ie.c.wpa_gen_wpa_ie_rsn.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_client_read.c /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_client_read.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_client_read.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_client_read.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		tlsv1_process_diffie_hellman 656-790
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_client_read.c.tlsv1_process_diffie_hellman.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 656 --end-line-number 790 /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_client_read.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_client_read.c.tlsv1_process_diffie_hellman.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_client_read.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_client_read.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		tlsv1_process_diffie_hellman 656-787
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_client_read.c.tlsv1_process_diffie_hellman.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 656 --end-line-number 787 /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_client_read.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_client_read.c.tlsv1_process_diffie_hellman.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		tls_verify_signature 414-523
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_common.c.tls_verify_signature.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 414 --end-line-number 523 /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_common.c.tls_verify_signature.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		tls_verify_signature 414-523
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_common.c.tls_verify_signature.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 414 --end-line-number 523 /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_common.c.tls_verify_signature.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_cred.c /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_cred.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_cred.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_cred.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		tlsv1_set_dhparams_der 1127-1198
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_cred.c.tlsv1_set_dhparams_der.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1127 --end-line-number 1198 /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_cred.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/tlsv1_cred.c.tlsv1_set_dhparams_der.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_cred.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_cred.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		tlsv1_set_dhparams_der 1127-1196
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_cred.c.tlsv1_set_dhparams_der.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1127 --end-line-number 1196 /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_cred.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/tlsv1_cred.c.tlsv1_set_dhparams_der.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		x509_parse_public_key 219-289
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.x509_parse_public_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 219 --end-line-number 289 /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.x509_parse_public_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		x509_parse_alt_name_ip 922-934
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.x509_parse_alt_name_ip.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 922 --end-line-number 934 /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.x509_parse_alt_name_ip.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		x509_certificate_parse 1620-1716
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.x509_certificate_parse.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1620 --end-line-number 1716 /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/tls/x509v3.c.x509_certificate_parse.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		x509_parse_public_key 219-288
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.x509_parse_public_key.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 219 --end-line-number 288 /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.x509_parse_public_key.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		x509_parse_alt_name_ip 921-932
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.x509_parse_alt_name_ip.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 921 --end-line-number 932 /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.x509_parse_alt_name_ip.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		x509_certificate_parse 1618-1713
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.x509_certificate_parse.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1618 --end-line-number 1713 /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/tls/x509v3.c.x509_certificate_parse.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		base64_encode 29-86
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c.base64_encode.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 29 --end-line-number 86 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c.base64_encode.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		base64_decode 99-157
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c.base64_decode.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 99 --end-line-number 157 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/base64.c.base64_decode.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		base64_gen_encode 20-80
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c.base64_gen_encode.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 20 --end-line-number 80 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c.base64_gen_encode.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		base64_gen_decode 83-150
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c.base64_gen_decode.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 83 --end-line-number 150 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/base64.c.base64_gen_decode.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/browser-wpadebug.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/browser-wpadebug.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/browser-wpadebug.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/browser-wpadebug.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/browser-wpadebug.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/browser-wpadebug.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/browser-wpadebug.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/browser-wpadebug.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/common.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/common.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ssid_parse 1161-1196
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/common.c.ssid_parse.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1161 --end-line-number 1196 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/common.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/common.c.ssid_parse.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/common.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/common.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		ssid_parse 1161-1196
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/common.c.ssid_parse.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1161 --end-line-number 1196 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/common.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/common.c.ssid_parse.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/crc32.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/crc32.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/crc32.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/crc32.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/crc32.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/crc32.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/crc32.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		crc32 75-85
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/crc32.c.crc32.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 75 --end-line-number 85 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/crc32.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/crc32.c.crc32.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/http_curl.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/http_curl.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/http_curl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/http_curl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/http_curl.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/http_curl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/http_curl.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/http_curl.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/json.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/json.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/json.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/json.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/json.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/json.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/json.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/json.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_none.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_none.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_none.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_none.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_none.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_none.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_none.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_none.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		os_get_reltime 70-122
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c.os_get_reltime.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 70 --end-line-number 122 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c.os_get_reltime.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		os_file_exists 436-443
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c.os_file_exists.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 436 --end-line-number 443 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_unix.c.os_file_exists.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		os_get_reltime 70-125
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.os_get_reltime.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 70 --end-line-number 125 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.os_get_reltime.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		os_file_exists 439-442
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.os_file_exists.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 439 --end-line-number 442 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.os_file_exists.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		os_memdup 511-518
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.os_memdup.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 511 --end-line-number 518 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_unix.c.os_memdup.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_win32.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_win32.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_win32.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_win32.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/os_win32.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_win32.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_win32.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/os_win32.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/pcsc_funcs.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/pcsc_funcs.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/pcsc_funcs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/pcsc_funcs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/pcsc_funcs.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/pcsc_funcs.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/pcsc_funcs.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/pcsc_funcs.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/trace.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/trace.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/trace.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/trace.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/trace.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/trace.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/utils_module_tests.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/utils_module_tests.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/uuid.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/uuid.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/uuid.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/uuid.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		is_nil_uuid 64-71
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/uuid.c.is_nil_uuid.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 64 --end-line-number 71 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/uuid.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/uuid.c.is_nil_uuid.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/uuid.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/uuid.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		is_nil_uuid 65-72
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/uuid.c.is_nil_uuid.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 65 --end-line-number 72 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/uuid.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/uuid.c.is_nil_uuid.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpa_debug.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpa_debug.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpa_debug.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpa_debug.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpa_debug.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpa_debug.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpabuf.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpabuf.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpabuf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpabuf.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpabuf_concat 237-262
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpabuf.c.wpabuf_concat.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 237 --end-line-number 262 /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpabuf.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/wpabuf.c.wpabuf_concat.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpabuf.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpabuf.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wpabuf_concat 237-260
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpabuf.c.wpabuf_concat.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 237 --end-line-number 260 /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpabuf.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/wpabuf.c.wpabuf_concat.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/xml-utils.c /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/xml-utils.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/xml-utils.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/utils/xml-utils.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/utils/xml-utils.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/xml-utils.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/utils/xml-utils.c.AST
[WARNING]: return code:1
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/utils/xml-utils.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps.c /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_init 39-153
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps.c.wps_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 39 --end-line-number 153 /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps.c.wps_init.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_init 39-149
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps.c.wps_init.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 39 --end-line-number 149 /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps.c.wps_init.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_er_ap_use_cached_settings 313-332
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.wps_er_ap_use_cached_settings.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 313 --end-line-number 332 /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.wps_er_ap_use_cached_settings.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_er_set_config 1945-1970
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.wps_er_set_config.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1945 --end-line-number 1970 /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.wps_er_set_config.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_er_config 1997-2035
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.wps_er_config.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1997 --end-line-number 2035 /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_er.c.wps_er_config.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_er_ap_use_cached_settings 313-331
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.wps_er_ap_use_cached_settings.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 313 --end-line-number 331 /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.wps_er_ap_use_cached_settings.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_er_set_config 1944-1968
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.wps_er_set_config.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1944 --end-line-number 1968 /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.wps_er_set_config.vec 2> output/errors
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		wps_er_config 1995-2032
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.wps_er_config.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 1995 --end-line-number 2032 /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c -o /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_er.c.wps_er_config.vec 2> output/errors
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_registrar.c /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_registrar.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_registrar.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_registrar.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_registrar.c
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_registrar.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_registrar.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[WARNING]: 			Failed parsing AST for file:
			/hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_registrar.c
[COMMAND]: diff -ENBZbwr /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_upnp_ssdp.c /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_upnp_ssdp.c > /crochet/tmp/temp_diff
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_upnp_ssdp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_upnp_ssdp.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Vector:generate_deckard_vec: dict_keys(['self'])
[INFO]: generating vector for 		str_starts 103-106
[COMMAND]: echo /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_upnp_ssdp.c.str_starts.vec
 >>  output/errors; third-party/Deckard/cvecgen_fail  --start-line-number 103 --end-line-number 106 /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_upnp_ssdp.c -o /hostap/CVE-2017-13077_Android/hostap-2016/src/wps/wps_upnp_ssdp.c.str_starts.vec 2> output/errors
[TRACE]: ast.Generator:get_function_list_for_line_range: dict_keys(['source_file', 'project', 'pertinent_lines'])
[TRACE]: ast.Generator:parse_ast: dict_keys(['file_path', 'use_deckard'])
[TRACE]: ast.Generator:generate_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_upnp_ssdp.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/wps/wps_upnp_ssdp.c.AST
[WARNING]: return code:0
[TRACE]: ast.AST:load_from_file: dict_keys(['file_path'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])
[TRACE]: ast.Generator:generate_vector: dict_keys(['file_path', 'end_line', 'start_line', 'is_deckard', 'f_or_struct'])

	Successful analysing source diff, after 129.44906997680664 seconds.
[TRACE]: phases.Differencing:safe_exec: dict_keys(['args', 'title', 'function_def'])
[INFO]: analysing ast diff
[INFO]: running <function analyse_ast_diff at 0x7fd071f76730>
[TRACE]: phases.Differencing:analyse_ast_diff: dict_keys([])
[TRACE]: tools.Differ:diff_ast: dict_keys(['project_path_b', 'script_file_path', 'diff_info', 'project_path_a'])
[INFO]: /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c
[TRACE]: tools.Differ:get_ast_script: dict_keys(['source_a', 'script_file_path', 'source_b'])
[TRACE]: ast.Generator:generate_ast_script: dict_keys(['source_a', 'outfile_path', 'source_b', 'dump_matches'])
[COMMAND]: crochet-diff -s=10 /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c 2> /crochet/tmp/errors_ast_diff > /crochet/tmp/ast-script
[TRACE]: ast.Generator:get_ast_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c.AST
[WARNING]: return code:1
[TRACE]: ast.Generator:get_ast_json: dict_keys(['file_path'])
[TRACE]: ast.Generator:ast_dump: dict_keys(['is_header', 'output_path', 'file_path'])
[COMMAND]: crochet-diff -ast-dump-json /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c 2> output/errors_AST_dump > /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c.AST
[WARNING]: return code:1
[TRACE]: tools.Mapper:map_ast_from_source: dict_keys(['source_a', 'script_file_path', 'source_b'])
[TRACE]: ast.Generator:generate_ast_script: dict_keys(['source_a', 'outfile_path', 'source_b', 'dump_matches'])
[COMMAND]: crochet-diff -s=10 -dump-matches /hostap/CVE-2017-13077_Android/hostap-2016/src/crypto/crypto_openssl.c /hostap/CVE-2017-13077_Android/hostap-2017/src/crypto/crypto_openssl.c 2> /crochet/tmp/errors_ast_diff | grep -P '^Match ' | grep -P '^Match ' > /crochet/tmp/ast-script
[TRACE]: tools.Filter:filter_ast_script: dict_keys(['info_a', 'ast_script', 'info_b', 'mapping_ba'])
[TRACE]: tools.Merger:merge_ast_script: dict_keys(['ast_script', 'ast_node_b', 'ast_node_a', 'mapping_ba'])
[TRACE]: ast.AST:load_from_map: dict_keys(['ast_map'])
[ERROR]: Crash during analysing ast diff, after 0.05373239517211914 seconds.
[ERROR]: dictionary changed size during iteration
[ERROR]: dictionary changed size during iteration
[ERROR]: Unexpected error during analysing ast diff.
[ERROR]: Unexpected error during analysing ast diff.
