#! /usr/bin/env python3
# -*- coding: utf-8 -*-


import time
from tools import Detector, Translation, Weaver, Emitter, Mapper, Extractor
from phases import Initialization
from common import Definitions
from common.Utilities import error_exit, create_directories


def first_run_check():
    create_directories()


def run():
    first_run_check()
    Emitter.start()
    start_time = time.time()
    time_info = dict()

    time_start = time.time()
    Initialization.initialize()
    time_info[Definitions.KEY_DURATION_INITIALIZATION] = str(time.time() - time_start)

    time_start = time.time()
    Detector.detect()
    time_info[Definitions.KEY_DURATION_BUILD_ANALYSIS] = str(time.time() - time_start)

    time_start = time.time()
    Extractor.extract()
    patch_extraction_duration = str(time.time() - time_start)

    time_now = time.time()
    Mapper.generate()
    mapping_duration = str(time.time() - time_start)

    time_start = time.time()
    Translation.translate()
    translation_duration = str(time.time() - time_start)

    time_start = time.time()
    Weaver.weave()
    transplantation_duration = str(time.time() - time_start)

    # Final clean
    Emitter.title("Cleaning residual files generated by Crochet...")
    
    # Final running time and exit message
    run_time = str(time.time() - start_time)
    Emitter.exit_msg(run_time, initialization_duration, function_identification_duration, patch_extraction_duration, translation_duration, transplantation_duration)
    
    
if __name__ == "__main__":
    try:
        run()
    except KeyboardInterrupt as e:
        err_exit("Program Interrupted by User")
