[K	

####################################################################################################

	Crochet - Horizontal Code Edit Transfer

####################################################################################################
[K
====================================================================================================

	Initializing project for Transfer
====================================================================================================

[K
	loading configuration
	__________________________________________________________________________________________

[K	reading configuration values
[K
	set environment
	__________________________________________________________________________________________

[K	setting environment values
[K
====================================================================================================

	Building Projects
====================================================================================================

[K
	building binaries
	__________________________________________________________________________________________

[K
		restoring projects
		------------------------------------------------------------------------------------------

[K		/crochet/example/fibonacci/PA/
[K		/crochet/example/fibonacci/PB/
[K		/crochet/example/fibonacci/PC/
[K		/crochet/example/fibonacci/PC-patch/
[K
		cleaning projects
		------------------------------------------------------------------------------------------

[K		/crochet/example/fibonacci/PA/
[K		/crochet/example/fibonacci/PB/
[K		/crochet/example/fibonacci/PC/
[K		/crochet/example/fibonacci/PC-patch/
[K
		configuring projects
		------------------------------------------------------------------------------------------

[K		/crochet/example/fibonacci/PA/
[K		/crochet/example/fibonacci/PB/
[K		/crochet/example/fibonacci/PC/
[K		/crochet/example/fibonacci/PC-patch/
[K
		building projects
		------------------------------------------------------------------------------------------

[K		/crochet/example/fibonacci/PA/
[K		/crochet/example/fibonacci/PB/
[K		/crochet/example/fibonacci/PC/
[K		/crochet/example/fibonacci/PC-patch/
[K
	Successful building binaries, after 0.8416452407836914 seconds.
[K
====================================================================================================

	Analysing Changes
====================================================================================================

[K
	analysing source diff
	__________________________________________________________________________________________

[K		finding changed files...
[K
		analysing header files
		------------------------------------------------------------------------------------------

[K			extracting changed header files...
[K			header files:
[K				-none-
[K
		analysing C/CPP source files
		------------------------------------------------------------------------------------------

[K			extracting changed c/cpp files...
[K			source files:
[K				/crochet/example/fibonacci/PA/fib.c
[K
		analysing changed code segments
		------------------------------------------------------------------------------------------

[K			collecting diff info...
[K			/crochet/example/fibonacci/PA/:
[K				fib in Pa/fib.c
[K				fib 3-10[K[K			/crochet/example/fibonacci/PB/:
[K				fib in Pb/fib.c
[K				fib 3-10[K[K
	Successful analysing source diff, after 0.5971667766571045 seconds.
[K
	analysing ast diff
	__________________________________________________________________________________________

[K
		/crochet/example/fibonacci/PA/fib.c
		------------------------------------------------------------------------------------------

[K		generating AST script
[K		line number:5
[K			filtering AST script by merging and grouping
[K			merging AST script
[K
	Successful analysing ast diff, after 0.14603757858276367 seconds.
[K
====================================================================================================

	Clone Detection
====================================================================================================

[K
	generating vectors for target
	__________________________________________________________________________________________

[K
		Generating vector files for all functions in Target
		------------------------------------------------------------------------------------------

[K			generating vectors for *\.h files in Pc...
[K			generating vectors for *\.c files in Pc...
[K
	Successful generating vectors for target, after 0.04914069175720215 seconds.
[K
	finding clones in target
	__________________________________________________________________________________________

[K
		Finding clone functions in Target
		------------------------------------------------------------------------------------------

[K		checking vectors for C files in Pa...
[K		checking vectors for C files in Pc...
[K		Variable mapping...

[K		Possible match for fib in $Pa/fib.c:
[K			Function: fibonacci in $Pc/fibonnaci.c
[K			Distance: 0.0

[K		Variable mapping from fib to fibonacci:
[K			int n -> int number
[K			n -> int number
[K			fi fib -> fibonacc fibonacci
[K		Best match for fib in $Pa/fib.c:
[K			Function: fibonacci in $Pc/fibonnaci.c
[K			Distance: 0.0

[K
	Successful finding clones in target, after 0.05758166313171387 seconds.
[K
====================================================================================================

	Generating GumTree script for patch
====================================================================================================

[K
	Starting generating script for header files...
	__________________________________________________________________________________________

[K
	Successful generating script for header files, after 0.00019550323486328125 seconds.
[K
	Starting generating script for C files...
	__________________________________________________________________________________________

[K	Generating edit script: fib.c to fib.c...
[K
	Successful generating script for C files, after 0.042798519134521484 seconds.
[K
====================================================================================================

	Variable Mapping
====================================================================================================

[K
	Variable mapping for header files
	__________________________________________________________________________________________

[K		 -nothing-to-do
[K
	Variable mapping for C files
	__________________________________________________________________________________________

[K	Generating mapping: fib.c to fibonnaci.c...
[K
====================================================================================================

	Translate GumTree Script
====================================================================================================

[K
	Translating scripts for header files
	__________________________________________________________________________________________

[K
	Translating scripts for C files
	__________________________________________________________________________________________

[K	Generating JSON temp files for each pertinent file...
[K			Clang AST parse /crochet/example/fibonacci/PA/fib.c in Pa...
[K			Clang AST parse /crochet/example/fibonacci/PB/fib.c in Pb...
[K			Clang AST parse /crochet/example/fibonacci/PC/fibonnaci.c in Pc...
[K
====================================================================================================

	Applying transformation
====================================================================================================

[K
	Transforming file /crochet/example/fibonacci/PC/fibonnaci.c
	__________________________________________________________________________________________

[K	Original AST script
[K			AST Script:
[K				 Update BinaryOperator(12) BinaryOperator(8)
[K				 Delete BinaryOperator(8)
[K				 Delete BinaryOperator(9)
[K				 Delete DeclRefExpr(10)
[K				 Delete IntegerLiteral(11)
[K	Generated AST script
[K			AST Script:
[K				 Update BinaryOperator(12) to BinaryOperator(8)
[K				 Delete BinaryOperator(8)
[K				 Delete BinaryOperator(9)
[K				 Delete DeclRefExpr(10)
[K				 Delete IntegerLiteral(11)
[K	Original Patch
[K		5c5
[K		< 	if (n == 0 || n == 1)
[K		---
[K		> 	if (n <= 1)
[K	Generated Patch
[K		5c5
[K		< 	if (number == 0 || number == 1)
[K		---
[K		> 	if (    number <= 1)
[K
	Successful transformation
[K	
Run time statistics:
-----------------------

[K	Initialization: 0.06952524185180664 seconds
[K	Build Analysis: 0.8428940773010254 seconds
[K	Diff Analysis: 0.7442913055419922 seconds
[K	Clone Analysis: 0.043604135513305664 seconds
[K	Map Generation: 0.04381084442138672 seconds
[K
Crochet finished successfully after 3.176846981048584 seconds

